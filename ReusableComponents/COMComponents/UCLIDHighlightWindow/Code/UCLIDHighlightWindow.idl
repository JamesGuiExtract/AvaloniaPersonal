// UCLIDHighlightWindow.idl : IDL source for UCLIDHighlightWindow.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (UCLIDHighlightWindow.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	uuid(47E3C6A5-3E04-4A82-9EE1-999870E29467),
	version(1.0),
	helpstring("UCLID HighlightWindow 1.0 Type Library")
]
library UCLID_HIGHLIGHTWINDOWLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		object,
		uuid(1B9F8E68-DDC0-401D-A3ED-399DC92BC78C),
		dual,
		helpstring("IHighlightWindow Interface"),
		pointer_default(unique)
	]
	interface IHighlightWindow : IDispatch
	{
		[id(1), helpstring("method Show")] HRESULT Show([in] long hWndParent, [in] long hWndChild);
		[id(2), helpstring("method HideAndForget")] HRESULT HideAndForget();
		[id(3), helpstring("method HideAndRemember")] HRESULT HideAndRemember();
		[id(4), helpstring("method Refresh")] HRESULT Refresh();
		[id(5), helpstring("method SetDefaultColor")] HRESULT SetDefaultColor([in] OLE_COLOR color);
		[id(6), helpstring("method SetAlternateColor1")] HRESULT SetAlternateColor1([in] OLE_COLOR color);
		[id(7), helpstring("method UseDefaultColor")] HRESULT UseDefaultColor();
		[id(8), helpstring("method UseAlternateColor1")] HRESULT UseAlternateColor1();
		[propput, id(9), helpstring("property ParentWndHandle")] HRESULT ParentWndHandle([in] long newVal);
	};

	[
		uuid(86455185-E70C-4953-B655-A479C59DE28B),
		helpstring("UCLID HighlightWindow Class")
	]
	coclass HighlightWindow
	{
		[default] interface IHighlightWindow;
	};
};
