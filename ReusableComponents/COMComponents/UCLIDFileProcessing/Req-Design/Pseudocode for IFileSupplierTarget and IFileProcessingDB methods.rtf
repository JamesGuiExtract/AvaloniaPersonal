{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f188\froman\fcharset238\fprq2 Times New Roman CE;}{\f189\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f191\froman\fcharset161\fprq2 Times New Roman Greek;}{\f192\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f193\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f194\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f195\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f204\fmodern\fcharset238\fprq1 Courier New CE;}
{\f205\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f207\fmodern\fcharset161\fprq1 Courier New Greek;}{\f208\fmodern\fcharset162\fprq1 Courier New Tur;}{\f209\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f210\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f211\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \b \sbasedon10 Strong;}{
\s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body Text;}}{\info{\title NotifyFileAdded(strFile, pFS):}{\author William Parr}
{\operator William Parr}{\creatim\yr2006\mo8\dy9\hr10\min44}{\revtim\yr2006\mo8\dy9\hr16\min21}{\printim\yr2006\mo8\dy9\hr14\min59}{\version5}{\edmins98}{\nofpages2}{\nofwords399}{\nofchars2279}{\*\company Extract Systems LLC}{\nofcharsws0}{\vern8247}}
\margl720\margr720\margt720\margb720 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin720\dgvorigin720\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs15\b\f2\fs20\ul NotifyFileAdded(strFile, pFS):}{
\par }{\f2\fs20 if (NOT m_ipSkipCondition->ShouldSkipFile(strFile, ...))}{
\par }{\f2\fs20 \{}{
\par }{\f2\fs20 \~\~\~ pFPDBMgr->AddFile(strFile, m_strCurrentAction, getComponentDescription(pFS),}{
\par }{\f2\fs20 \~\~\~\~\~\~\~ getForceProcessingFlag(pFS), VARIANT_FALSE, &bAlreadyExists, &ePreviousAS);}{
\par }{\f2\fs20 \}}{
\par \~
\par }{\cs15\b\f2\fs20\ul FileProcessingDB::AddFile(strFile, strAction, strFileSupplierDesc,}{\fs20 
\par }{\cs15\b\f2\fs20 \~\~\~\~}{\cs15\b\f2\fs20\ul bForceProcessing, }{\b\f2\fs20\ul bFileModified, }{\cs15\f2\fs20\ul pbAlreadyExists}{\cs15\b\f2\fs20\ul , pePreviousAS):}{\fs20 
\par }{\f2\fs20 try}{\fs20 
\par }{\f2\fs20 \{}{\fs20 
\par }{\f2\fs20 \~\~\~ add new row to File table with "pending" as strAction's state}{\fs20 
\par }{\f2\fs20 \}}{\fs20 
\par }{\f2\fs20 catch (FileRecordAlreadyExistsInTable)}{\fs20 
\par }{\f2\fs20 \{}{\fs20 
\par }{\f2\fs20 \~\~\~ if (bForceProcessing)}{\fs20 
\par }{\f2\fs20 \~\~\~ \{}{\fs20 
\par }{\f2\fs20 \~\~\~\~\~\~\~ set strAction's state for strFile to "pending"}{\fs20 
\par \~
\par }{\f2\fs20 \~\~\~\~\~\~\~ add new record to FileActionStateTransition table}{\fs20 
\par }{\f2\fs20 \~\~\~ \}}{\fs20 
\par \~
\par }{\f2\fs20 \~\~\~ set out parameter value for pbAlreadyExists}{\fs20 
\par }{\f2\fs20 \~\~\~ }{
\par }{\f2\fs20 \~\~\~\~set out parameter value for pePreviousAS\line \}}{
\par \~
\par }{\f2\fs20 add new record to the QueueEvent table indicating if the file was modfied or added}{
\par \~
\par }{\f2\fs20 return ID of record in FileTable associated with strFile}{
\par \~
\par }{\cs15\b\f2\fs20\ul NotifyFileRemoved(strFile, pFS):}{
\par }{\f2\fs20 if (NOT m_ipSkipCondition->ShouldSkipFile(strFile, ...))}{
\par }{\f2\fs20 \{}{
\par }{\f2\fs20 \~\~\~ pFPDBMgr->RemoveFile(strFile, m_strCurrentAction, getComponentDescription(pFS));}{
\par }{\f2\fs20 \}}{
\par \~
\par }{\cs15\b\f2\fs20\ul FileProcessingDB::RemoveFile(strFile, strAction, strFileSupplierDesc):}{
\par }{\f2\fs20 if (Files table contains strFile)}{
\par }{\f2\fs20 \{}{
\par }{\f2\fs20 \~\~\~ if (strFile's current action's state is "pending")}{
\par }{\f2\fs20 \~\~\~ \{}{
\par }{\f2\fs20 \~\~\~\~\~\~\~\~set strFile's current action's state to "unattempted"}{\fs20 
\par }{\f2\fs20 \~\~\~\~\~\~\~ add new record to FileActionStateTransition table}{\fs20 
\par }{\f2\fs20 \~\~\~ \}}{
\par \~
\par }{\f2\fs20 \~\~\~ add new record to QueueEvent table}{
\par }{\f2\fs20 \}}{
\par \~
\par }{\cs15\b\f2\fs20\ul NotifyFileRenamed(strOldFile, strNewFile, pFS):}{
\par }{\f2\fs20 if (NOT bSkipOldFile)}{
\par }{\f2\fs20 \{}{
\par }{\f2\fs20 \~\~\~ if (NOT bSkipNewFile)}{
\par }{\f2\fs20 \~\~\~ \{}{
\par }{\f2\fs20 \~\~\~\~\~\~\~ pFPDBMgr->RenameFile(strOldFile, strNewFile, m_strCurrentAction, \line \tab \tab getComponentDescription(pFS), \line \tab \tab getForceProcessingFlag(pFS), );
\par \~\~\~ \}}{
\par }{\f2\fs20 \~\~\~ else}{
\par }{\f2\fs20 \~\~\~ \{}{
\par }{\f2\fs20 \~\~\~\~\~\~\~ pFPDBMgr->Remove(...)}{
\par }{\f2\fs20 \~\~\~ \}}{
\par }{\f2\fs20 \}}{
\par }{\f2\fs20 else}{
\par }{\f2\fs20 \{
\par \~\~\~ if (NOT bSkipNewFile)
\par \~\~\~ \{
\par \~\~\~\~\~\~\~ pFPDBMgr->AddFile(...);
\par \~\~\~ \}
\par \}}{
\par \~
\par }{\cs15\b\f2\fs20\ul FileProcessingDB::RenameFile(strOldFile, strNewFile,}{\fs20 
\par }{\cs15\b\f2\fs20 \~\~\~\~}{\cs15\b\f2\fs20\ul strAction, strFileSupplierDesc, bForceProcessing):}{\fs20 
\par }{\f2\fs20 this->RemoveFile(...)}{\f2 
\par }{\f2\fs20 this->AddFile(...)
\par 
\par }{\cs15\b\f2\fs20\ul NotifyFolderDeleted( strFolder, pFS ):
\par }{\f2\fs20 
\par pFPDBMgr->RemoveFolder( strFolder, m_strCurrentAction, \tab getComponentDescription(pFS));}{
\par }{\f2\fs20 
\par 
\par }\pard\plain \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Note: Will not be able to apply skip conditions because do not know what files were in the deleted folder.
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2 
\par }{\cs15\b\f2\fs20\ul FileProcessingDB::DeleteFolder( strFolder, strAction, strFileSupplierDesc):
\par }{\cs15\b\f2\fs20 
\par }{\f2\fs20 For each FileName in file table that contains strFolder
\par \{
\par \tab this->RemoveFile(...)
\par \}
\par 
\par }{\cs15\b\f2\fs20\ul NotifyFolderRenamed( strOldFolder, strNewFolder, pFS ):
\par }{\f2\fs20 
\par For each strNewFile in StrNewFolder
\par \{
\par \tab strOldFile = strOldFolder + FileNameOf(strNewFile)
\par \tab if (NOT bSkipOldFile)}{
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \{}{
\par }{\f2\fs20 \~\tab if (NOT bSkipNewFile)}{
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 \{}{
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs20 pFPDBMgr->RenameFile(strOldFile, strNewFile, m_strCurrentAction, \line \tab \tab getComponentDescription(pFS), \line \tab \tab 
getForceProcessingFlag(pFS), );
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \~\~\~ \tab \tab \}}{
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 else}{
\par }{\f2\fs20 \{}{
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \~\~\~\~\~\~\~ \tab \tab pFPDBMgr->Remove(...)}{
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 \}}{
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \}}{
\par }{\f2\fs20 else}{
\par }{\f2\fs20 \{
\par \~\~\~ \tab if (NOT bSkipNewFile)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \~\~\~ \tab \tab \{
\par \~\~\~\~\~\~\tab \tab pFPDBMgr->AddFile(...);
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 \}
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \}
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \}
\par }{\cs15\b\f2\fs20\ul 
\par NotifyFileModified( strFile, pFS ):
\par }{\f2\fs20 if (NOT m_ipSkipCondition->ShouldSkipFile(strFile, ...))}{
\par }{\f2\fs20 \{}{
\par }{\f2\fs20 \~\~\~ pFPDBMgr->AddFile(strFile, m_strCurrentAction, getComponentDescription(pFS),}{
\par }{\f2\fs20 \~\~\~\~\~\~\~ getForceProcessingFlag(pFS), VARIANT_TRUE, &bAlreadyExists, &ePreviousAS);}{
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\pnrauth1\pnrdate1722305462\pnrnot1\adjustright\rin0\lin0\itap0 {\f2\fs20 \}}{
\par }}