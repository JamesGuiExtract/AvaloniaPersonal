#if !defined(AFX_IMAGEEDIT_H__7EEED31A_E09C_4D72_8415_CAC69FA8CCAF__INCLUDED_)
#define AFX_IMAGEEDIT_H__7EEED31A_E09C_4D72_8415_CAC69FA8CCAF__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CImageEdit wrapper class

class CImageEdit : public CWnd
{
protected:
	DECLARE_DYNCREATE(CImageEdit)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x96a61232, 0x6749, 0x4b65, { 0x82, 0x3f, 0x4a, 0x6e, 0xe6, 0xd0, 0x3, 0xc4 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetPage();
	void SetPage(long);
	long GetScrollPositionX();
	void SetScrollPositionX(long);
	long GetScrollPositionY();
	void SetScrollPositionY(long);
	long GetMousePointer();
	void SetMousePointer(long);
	double GetBaseRotation();
	void SetBaseRotation(double);

// Operations
public:
	void SetImage(LPCTSTR szImagePath);
	void Display();
	void ClearDisplay();
	void Refresh();
	void LockLeadWndUpdate();
	void UnlockLeadWndUpdate();
	void Scroll(short iType, long iDistance);
	long GetImageWidth();
	long GetPageCount();
	long GetImageHeight();
	CString GetImage();
	//--------------------------------------------------------------------------------------
	// PURPOSE: Zoom the image to fit to the page or fit to the width of the window
	// REQUIRE: Image must have been loaded
	// PROMISE: The image will fit to the page of the window if bFitPage is true, 
	//			if it is false, it will fit the width of the window
	void FitToParent(long bFitPage);
	void DrawSelectionRect(long Left, long Top, long Right, long Bottom);
	long GetXResolution();
	long GetYResolution();
	void ZoomInAroundPoint(long PosX, long PosY);
	void ZoomOutAroundPoint(long PosX, long PosY);
	void SetZoomMagnifyFactor(long lPercentMagnify);
	long GetZoomMagnifyFactor();
	double GetZoom();
	void SetZoom(long newValue);
	void SetCursorHandle(long* hCursor);
	void ExtractZoneImage(long nX1, long nY1, long nX2, long nY2, long nHeight, long nPageNum, LPCTSTR strFileName);
	void EnableVerticalScroll(long bEnable);
	void RefreshRect(long lLeft, long lTop, long lRight, long lBottom);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_IMAGEEDIT_H__7EEED31A_E09C_4D72_8415_CAC69FA8CCAF__INCLUDED_)
