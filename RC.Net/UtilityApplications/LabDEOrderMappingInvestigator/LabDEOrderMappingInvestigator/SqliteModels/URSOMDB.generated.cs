//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace LabDEOrderMappingInvestigator.SqliteModels
{
	/// <summary>
	/// Database       : OrderMappingDB
	/// Data Source    : OrderMappingDB
	/// Server Version : 3.24.0
	/// </summary>
	public partial class URSOrderMappingDB : LinqToDB.Data.DataConnection
	{
		public ITable<AKAFrequency>     AKAFrequencies    { get { return this.GetTable<AKAFrequency>(); } }
		public ITable<ESCommonWord>     ESCommonWords     { get { return this.GetTable<ESCommonWord>(); } }
		public ITable<ESComponent>      ESComponents      { get { return this.GetTable<ESComponent>(); } }
		public ITable<ESComponentAKA>   ESComponentAkas   { get { return this.GetTable<ESComponentAKA>(); } }
		public ITable<ESComponentUnit>  ESComponentUnits  { get { return this.GetTable<ESComponentUnit>(); } }
		public ITable<ESFlag>           ESFlags           { get { return this.GetTable<ESFlag>(); } }
		public ITable<ESOrder>          ESOrders          { get { return this.GetTable<ESOrder>(); } }
		public ITable<ESOrderComponent> ESOrderComponents { get { return this.GetTable<ESOrderComponent>(); } }
		public ITable<ESUnit>           ESUnits           { get { return this.GetTable<ESUnit>(); } }

		public URSOrderMappingDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public URSOrderMappingDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public URSOrderMappingDB(LinqToDBConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public URSOrderMappingDB(LinqToDBConnectionOptions<URSOrderMappingDB> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("AKAFrequency")]
	public partial class AKAFrequency
	{
		[PrimaryKey(0), NotNull    ] public string Name            { get; set; } // nvarchar(500)
		[PrimaryKey(1), NotNull    ] public string ESComponentCode { get; set; } // nvarchar(50)
		[Column,           Nullable] public int?   Frequency       { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_AKAFrequency_0_0 (ESComponent)
		/// </summary>
		[Association(ThisKey="ESComponentCode", OtherKey="Code", CanBeNull=false)]
		public ESComponent ESComponent { get; set; }

		#endregion
	}

	[Table("ESCommonWords")]
	public partial class ESCommonWord
	{
		[PrimaryKey, NotNull] public string Word { get; set; } // nvarchar(50)
	}

	[Table("ESComponent")]
	public partial class ESComponent
	{
		[PrimaryKey, NotNull    ] public string Code              { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public string Name              { get; set; } // nvarchar(500)
		[Column,        Nullable] public string SampleType        { get; set; } // nvarchar(25)
		[Column,        Nullable] public byte?  OrderOfMagnitude  { get; set; } // tinyint
		[Column,        Nullable] public string MatchScoringQuery { get; set; } // nvarchar(500)

		#region Associations

		/// <summary>
		/// FK_AKAFrequency_0_0_BackReference (AKAFrequency)
		/// </summary>
		[Association(ThisKey="Code", OtherKey="ESComponentCode", CanBeNull=true)]
		public IEnumerable<AKAFrequency> AKAFrequencies { get; set; }

		/// <summary>
		/// FK_ESComponentAKA_0_0_BackReference (ESComponentAKA)
		/// </summary>
		[Association(ThisKey="Code", OtherKey="ESComponentCode", CanBeNull=true)]
		public IEnumerable<ESComponentAKA> ESComponentAkas { get; set; }

		/// <summary>
		/// FK_ESComponentUnit_1_0_BackReference (ESComponentUnit)
		/// </summary>
		[Association(ThisKey="Code", OtherKey="ESComponentCode", CanBeNull=true)]
		public IEnumerable<ESComponentUnit> ESComponentUnits { get; set; }

		/// <summary>
		/// FK_ESOrderComponent_1_0_BackReference (ESOrderComponent)
		/// </summary>
		[Association(ThisKey="Code", OtherKey="ESComponentCode", CanBeNull=true)]
		public IEnumerable<ESOrderComponent> ESOrderComponents { get; set; }

		#endregion
	}

	[Table("ESComponentAKA")]
	public partial class ESComponentAKA
	{
		[PrimaryKey(0), NotNull] public string Name            { get; set; } // nvarchar(500)
		[PrimaryKey(1), NotNull] public string ESComponentCode { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_ESComponentAKA_0_0 (ESComponent)
		/// </summary>
		[Association(ThisKey="ESComponentCode", OtherKey="Code", CanBeNull=false)]
		public ESComponent ESComponent { get; set; }

		#endregion
	}

	[Table("ESComponentUnit")]
	public partial class ESComponentUnit
	{
		[PrimaryKey(0), NotNull] public string ESComponentCode { get; set; } // nvarchar(50)
		[PrimaryKey(1), NotNull] public long   ESUnitID        { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK_ESComponentUnit_1_0 (ESComponent)
		/// </summary>
		[Association(ThisKey="ESComponentCode", OtherKey="Code", CanBeNull=false)]
		public ESComponent ESComponent { get; set; }

		/// <summary>
		/// FK_ESComponentUnit_0_0 (ESUnit)
		/// </summary>
		[Association(ThisKey="ESUnitID", OtherKey="ID", CanBeNull=false)]
		public ESUnit ESUnit { get; set; }

		#endregion
	}

	[Table("ESFlag")]
	public partial class ESFlag
	{
		[PrimaryKey, NotNull] public string Code { get; set; } // nvarchar(25)
	}

	[Table("ESOrder")]
	public partial class ESOrder
	{
		[PrimaryKey, NotNull] public string Code { get; set; } // nvarchar(50)
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)

		#region Associations

		/// <summary>
		/// FK_ESOrderComponent_0_0_BackReference (ESOrderComponent)
		/// </summary>
		[Association(ThisKey="Code", OtherKey="ESOrderCode", CanBeNull=true)]
		public IEnumerable<ESOrderComponent> ESOrderComponents { get; set; }

		#endregion
	}

	[Table("ESOrderComponent")]
	public partial class ESOrderComponent
	{
		[PrimaryKey(0), NotNull] public string ESOrderCode     { get; set; } // nvarchar(50)
		[PrimaryKey(1), NotNull] public string ESComponentCode { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_ESOrderComponent_1_0 (ESComponent)
		/// </summary>
		[Association(ThisKey="ESComponentCode", OtherKey="Code", CanBeNull=false)]
		public ESComponent ESComponent { get; set; }

		/// <summary>
		/// FK_ESOrderComponent_0_0 (ESOrder)
		/// </summary>
		[Association(ThisKey="ESOrderCode", OtherKey="Code", CanBeNull=false)]
		public ESOrder ESOrder { get; set; }

		#endregion
	}

	[Table("ESUnit")]
	public partial class ESUnit
	{
		[Column,     NotNull ] public string Unit { get; set; } // nvarchar(50)
		[PrimaryKey, Identity] public long   ID   { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_ESComponentUnit_0_0_BackReference (ESComponentUnit)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="ESUnitID", CanBeNull=true)]
		public IEnumerable<ESComponentUnit> ESComponentUnits { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AKAFrequency Find(this ITable<AKAFrequency> table, string Name, string ESComponentCode)
		{
			return table.FirstOrDefault(t =>
				t.Name            == Name &&
				t.ESComponentCode == ESComponentCode);
		}

		public static ESCommonWord Find(this ITable<ESCommonWord> table, string Word)
		{
			return table.FirstOrDefault(t =>
				t.Word == Word);
		}

		public static ESComponent Find(this ITable<ESComponent> table, string Code)
		{
			return table.FirstOrDefault(t =>
				t.Code == Code);
		}

		public static ESComponentAKA Find(this ITable<ESComponentAKA> table, string Name, string ESComponentCode)
		{
			return table.FirstOrDefault(t =>
				t.Name            == Name &&
				t.ESComponentCode == ESComponentCode);
		}

		public static ESComponentUnit Find(this ITable<ESComponentUnit> table, string ESComponentCode, long ESUnitID)
		{
			return table.FirstOrDefault(t =>
				t.ESComponentCode == ESComponentCode &&
				t.ESUnitID        == ESUnitID);
		}

		public static ESFlag Find(this ITable<ESFlag> table, string Code)
		{
			return table.FirstOrDefault(t =>
				t.Code == Code);
		}

		public static ESOrder Find(this ITable<ESOrder> table, string Code)
		{
			return table.FirstOrDefault(t =>
				t.Code == Code);
		}

		public static ESOrderComponent Find(this ITable<ESOrderComponent> table, string ESOrderCode, string ESComponentCode)
		{
			return table.FirstOrDefault(t =>
				t.ESOrderCode     == ESOrderCode &&
				t.ESComponentCode == ESComponentCode);
		}

		public static ESUnit Find(this ITable<ESUnit> table, long ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}
	}
}
