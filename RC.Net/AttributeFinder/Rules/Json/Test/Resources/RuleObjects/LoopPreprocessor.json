[
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential component/test<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If component/test mark appropriately<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isHeading.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If component, mark ä<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isComponent.rsd.etf"
                            }
                          },
                          "InvertCondition": false,
                          "Rule": {
                            "Type": "AdvancedReplaceString",
                            "Object": {
                              "StrToBeReplaced": "·[^\\r\\n\\t]+",
                              "AsRegularExpression": true,
                              "IsCaseSensitive": false,
                              "Replacement": "«$0ä»",
                              "ReplacementOccurrenceType": "First",
                              "SpecifiedOccurrence": 0
                            }
                          }
                        }
                      },
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If orphan component/test, mark â or é<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isIndented.rsd.etf"
                            }
                          },
                          "InvertCondition": true,
                          "Rule": {
                            "Type": "DocPreprocessorSequence",
                            "Object": {
                              "ObjectsVector": [
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "change ä to â<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "(?<=·[^«»]+)ä»",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "â»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                },
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "mark é<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "·[^\\r\\n\\t«»]+(?=[\\r\\n\\t])",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "«$0é»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Change ä to â if not preceded by é<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "ä(?<=(?:\\A|â)[^äâé]+ä)",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": true,
                          "Replacement": "â",
                          "ReplacementOccurrenceType": "All",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked dbl newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region wont fit between replace with single newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(\\r\\n)+¦",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Else remove above if more than three lines follow<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "RegExprRule",
                      "Object": {
                        "IsRegExpFromFile": false,
                        "RegExpFileName": "",
                        "Pattern": "(?n-m)\r\n¦\\r\\n\r\n[^\\r\\n¿]{2,}\r\n(\\r\\n[^\\r\\n]+){3,}\r\n$",
                        "IsCaseSensitive": false,
                        "FirstMatchOnly": false,
                        "CreateSubAttributesFromNamedMatches": false,
                        "OnlyCreateOneSubAttributePerGroup": true
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ¿ with ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds mark with «...<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTest.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "«",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¨<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¨",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If marked header is left, change ¨ to ¦, remove all ¿<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\isPotentialHeaderLO.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Replace ¨ with ¦<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¨",
                          "AsRegularExpression": false,
                          "IsCaseSensitive": false,
                          "Replacement": "¦",
                          "ReplacementOccurrenceType": "First",
                          "SpecifiedOccurrence": 0
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Remove ¿<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¿(\\S)",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": false,
                          "Replacement": "$1",
                          "ReplacementOccurrenceType": "All",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¨<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¨(\\S)",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change first ¿ to ¨<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "¨",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "ForLoop",
      "Condition": {
        "Type": null,
        "Description": null,
        "Enabled": false,
        "Object": null
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "[âä]",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 2,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "findings.dat<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": true,
              "RegExpFileName": "<RSDFileDir>\\tag_findings.dat.etf",
              "Pattern": "",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "findings.dat<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "file://<RSDFileDir>\\tag_findings.dat.etf",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "»«$1",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has column break<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "(?n)\r\n\\t\r\n(\r\n    (?=[^\\r\\n]+\\r\\n)\r\n  | (?=[^\\r\\n])(?<=\\n[^\\r\\n]+)\r\n)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Trim off one side<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove right side of column break if more chars on left side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=\\t)\\S+"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove left of column break if not more chars on that side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "\\S+(?=\\t)"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Iterations": 30,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential component/test<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If component/test mark appropriately<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isHeading.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If component, mark ä<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isComponent.rsd.etf"
                            }
                          },
                          "InvertCondition": false,
                          "Rule": {
                            "Type": "AdvancedReplaceString",
                            "Object": {
                              "StrToBeReplaced": "·[^\\r\\n\\t]+",
                              "AsRegularExpression": true,
                              "IsCaseSensitive": false,
                              "Replacement": "«$0ä»",
                              "ReplacementOccurrenceType": "First",
                              "SpecifiedOccurrence": 0
                            }
                          }
                        }
                      },
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If orphan component/test, mark â or é<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isIndented.rsd.etf"
                            }
                          },
                          "InvertCondition": true,
                          "Rule": {
                            "Type": "DocPreprocessorSequence",
                            "Object": {
                              "ObjectsVector": [
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "change ä to â<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "(?<=·[^«»]+)ä»",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "â»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                },
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "mark é<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "·[^\\r\\n\\t«»]+(?=[\\r\\n\\t])",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "«$0é»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked space remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=~)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=~)[^\\r\\n`]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\r\n\r\n",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds mark with «...ä»<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTest.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬([^\\t\\r\\n]+)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "«$1ä",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has mark<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Handle<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If mark begins column of numbers, exclude column<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\columnOfLineNumbers.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "LocateImageRegion",
                        "Description": "Exclude column<Locate image region>",
                        "Enabled": true,
                        "Object": {
                          "DataInsideBoundaries": false,
                          "FindType": "Text",
                          "ImageRegionText": "",
                          "IncludeIntersectingEntities": true,
                          "IntersectingEntityType": "Word",
                          "MatchMultiplePagesPerDocument": false,
                          "ClueList1": {
                            "Clues": [
                              "^\\d{2}·"
                            ],
                            "CaseSensitive": true,
                            "Regex": true,
                            "RestrictByBoundary": false
                          },
                          "ClueList2": {
                            "Clues": [],
                            "CaseSensitive": false,
                            "Regex": false,
                            "RestrictByBoundary": false
                          },
                          "ClueList3": {
                            "Clues": [],
                            "CaseSensitive": false,
                            "Regex": false,
                            "RestrictByBoundary": false
                          },
                          "ClueList4": {
                            "Clues": [],
                            "CaseSensitive": false,
                            "Regex": false,
                            "RestrictByBoundary": false
                          },
                          "Left": {
                            "Anchor": "ClueList1",
                            "AnchorSide": "Left",
                            "ExpandDirection": "ExpandLeft",
                            "ExpandBy": 2.0,
                            "ExpandUnits": "ClueCharacters"
                          },
                          "Top": {
                            "Anchor": "Page",
                            "AnchorSide": "Top",
                            "ExpandDirection": "ExpandUp",
                            "ExpandBy": 0.0,
                            "ExpandUnits": "PageLines"
                          },
                          "Right": {
                            "Anchor": "ClueList1",
                            "AnchorSide": "Right",
                            "ExpandDirection": "ExpandRight",
                            "ExpandBy": 1.0,
                            "ExpandUnits": "ClueCharacters"
                          },
                          "Bottom": {
                            "Anchor": "Page",
                            "AnchorSide": "Bottom",
                            "ExpandDirection": "ExpandDown",
                            "ExpandBy": 0.0,
                            "ExpandUnits": "PageLines"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else, remove first mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential value<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If value, mark with ÿ<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If value, mark ÿ<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isValue.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·[^\\r\\n\\t]+",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "«$0ÿ»",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential tab<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«\\s»",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If a tab, replace with four spaces<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a tab, replace with four spaces<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTab.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=«)\\s(?=»)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a tab, replace with four spaces<Conditionally preprocess>",
              "Enabled": false,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "(?:[^»\\n\\d]+«(?=\\s»\\D)|[^»\\n]+\\d«(?=\\s»\\d)|\\S«)"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "»(?:[^«\\d]+|\\d)"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=«)\\s(?=»)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove tags<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«(\\s+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "check clue<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": true,
              "RegExpFileName": "<RSDFileDir>\\erly_directions.dat.etf",
              "Pattern": "",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "mask area<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Character",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "file://<RSDFileDir>\\erly_directions.dat.etf"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 1.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked space remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=~)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=~)[^\\r\\n`]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has column break<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "(?n)\r\n\\t\r\n(?!\\d{5}([-\\s]\\d{4})?\\W*\\z)\r\n(\r\n    (?=[^\\r\\n]+\\r\\n)\r\n  | (?=[^\\r\\n])(?<=\\n[^\\r\\n]+)\r\n)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Trim off one side<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove right side of column break if more chars on left side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=\\t)\\S+"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 2.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove left of column break if not more chars on that side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "\\S+(?=\\t)"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 2.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Iterations": 30,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has ¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Change to single if needed<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If no blank line above, remove extra newlines<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "¬[^\\r\\n\\t]+\\S[^\\r\\n\\t]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?:\\r\\n)+(\\r\\n)(?=¬)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "$1",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change · to ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked dbl newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region fits horizontally between remove to the right of<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Line",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region fits horizontally between (the other way) remove to the right of<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2}[\\S\\s]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Line",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "[^\\r\\n]{2,}(?=\\s+¦)"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region wont fit between replace with single newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(\\r\\n)+¦",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Else remove above if more than three lines follow<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "RegExprRule",
                      "Object": {
                        "IsRegExpFromFile": false,
                        "RegExpFileName": "",
                        "Pattern": "(?n-m)\r\n¦\\r\\n\r\n[^\\r\\n¿]{2,}\r\n(\\r\\n[^\\r\\n]+){3,}\r\n$",
                        "IsCaseSensitive": false,
                        "FirstMatchOnly": false,
                        "CreateSubAttributesFromNamedMatches": false,
                        "OnlyCreateOneSubAttributePerGroup": true
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ¿ with ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds change ¬ to çC<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isCollectedClue.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "çC",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else change to C<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "C",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has item pending<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "`",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Remove if crap<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "mark ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If crap, remove<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\short.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·«[^»]+»",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds change ¬ to ÇD<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isCollectedClue.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "ÇD",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else change to D<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "D",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change to ¦ if a column header<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\Utils\\isColumnHeader.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "«",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace «»<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "first ¿ --> «<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "«",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¨<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¨",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If marked header is left, change ¨ to ¦, remove all ¿<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\Shared\\isPotentialHeaderLO.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Replace ¨ with ¦<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¨",
                          "AsRegularExpression": false,
                          "IsCaseSensitive": false,
                          "Replacement": "¦",
                          "ReplacementOccurrenceType": "First",
                          "SpecifiedOccurrence": 0
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Remove ¿<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¿(\\S)",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": false,
                          "Replacement": "$1",
                          "ReplacementOccurrenceType": "All",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¨<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¨(\\S)",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change first ¿ to ¨<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "¨",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "First char poor OCR<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\firstCharPoorOCR.rsd.etf"
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "Remove first char<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "\\A[\\S\\s]",
          "AsRegularExpression": true,
          "IsCaseSensitive": true,
          "Replacement": "",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 10,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "While \\d{2} or state<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "\\d\r\n|\r\n[,.]\\x20\r\n\\b(ALABAMA|ALASKA|AMERICAN\\s+SAMOA|ARIZONA|ARKANSAS|CALIFORNIA|COLORADO|CONNECTICUT|DELAWARE|DISTRICT\\s+OF\\s+COLUMBIA|FEDERATED\\s+STATES\\s+OF\\s+MICRONESIA|FLORIDA|GEORGIA|GUAM|HAWAII|IDAHO|ILLINOIS|INDIANA|IOWA|KANSAS|KENTUCKY|LOUISIANA|MAINE|MARSHALL\\s+ISLANDS|MARYLAND|MASSACHUSETTS|MICHIGAN|MINNESOTA|MISSISSIPPI|MISSOURI|MONTANA|NEBRASKA|NEVADA|NEW\\s+HAMPSHIRE|NEW\\s+JERSEY|NEW\\s+MEXICO|NEW\\s+YORK|NORTH\\s+CAROLINA|NORTH\\s+DAKOTA|NORTHERN\\s+MARIANA\\s+ISLANDS|OHIO|OKLAHOMA|OREGON|PALAU|PENNSYLVANIA|PUERTO\\s+RICO|RHODE\\s+ISLAND|SOUTH\\s+CAROLINA|SOUTH\\s+DAKOTA|TENNESSEE|TEXAS|UTAH|VERMONT|VIRGIN\\s+ISLANDS|VIRGINIA|WASHINGTON|WEST\\s+VIRGINIA|WISCONSIN|WYOMING|(?-i:AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY))\\b",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Exclude lines w/ \\d{2}<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Line",
          "MatchMultiplePagesPerDocument": true,
          "ClueList1": {
            "Clues": [
              "\\d",
              "\\b(ALABAMA|ALASKA|AMERICAN\\s+SAMOA|ARIZONA|ARKANSAS|CALIFORNIA|COLORADO|CONNECTICUT|DELAWARE|DISTRICT\\s+OF\\s+COLUMBIA|FEDERATED\\s+STATES\\s+OF\\s+MICRONESIA|FLORIDA|GEORGIA|GUAM|HAWAII|IDAHO|ILLINOIS|INDIANA|IOWA|KANSAS|KENTUCKY|LOUISIANA|MAINE|MARSHALL\\s+ISLANDS|MARYLAND|MASSACHUSETTS|MICHIGAN|MINNESOTA|MISSISSIPPI|MISSOURI|MONTANA|NEBRASKA|NEVADA|NEW\\s+HAMPSHIRE|NEW\\s+JERSEY|NEW\\s+MEXICO|NEW\\s+YORK|NORTH\\s+CAROLINA|NORTH\\s+DAKOTA|NORTHERN\\s+MARIANA\\s+ISLANDS|OHIO|OKLAHOMA|OREGON|PALAU|PENNSYLVANIA|PUERTO\\s+RICO|RHODE\\s+ISLAND|SOUTH\\s+CAROLINA|SOUTH\\s+DAKOTA|TENNESSEE|TEXAS|UTAH|VERMONT|VIRGIN\\s+ISLANDS|VIRGINIA|WASHINGTON|WEST\\s+VIRGINIA|WISCONSIN|WYOMING|(?-i:AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY))\\b"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change to ¦ if has first-line part<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\hasFirstPartClueAbove.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "«",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace «»<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "first ¿ --> «<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "«",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds mark with «...<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\HandleStoneComponents\\isStoneComponent.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "«",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change to ¦ if a column header<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\Shared\\isColumnHeader.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "«",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace «»<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "first ¿ --> «<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "«",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Clue<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "(?inxs) \\b(?:STATE|COUNTY)\\b | (?~<>\\bSTATE.OF\\b) | (?~<>COMMONWEALTH.OF)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "(?inxs) \\b(?:STATE|COUNTY)\\b | (?~<>\\bSTATE.OF\\b) | (?~<>\\bCOUNTY.OF\\b) | (?~<>COMMONWEALTH.OF)"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "ClueList1",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 1.4,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "ClueList1",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 60.0,
            "ExpandUnits": "ClueCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 1.4,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 10,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Tag exists<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "Ç",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Validate item<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Mark as Test",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTest.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "ü",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "é",
                    "ReplacementOccurrenceType": "All",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If failed to validate, remove tags",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^«»]+)ü»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked dbl newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region wont fit between replace with single newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(\\r\\n)+¦",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Else remove above if more than three lines follow<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "RegExprRule",
                      "Object": {
                        "IsRegExpFromFile": false,
                        "RegExpFileName": "",
                        "Pattern": "(?n-m)\r\n¦\\r\\n\r\n[^\\r\\n¿]{2,}\r\n(\\r\\n[^\\r\\n]+){3,}\r\n$",
                        "IsCaseSensitive": false,
                        "FirstMatchOnly": false,
                        "CreateSubAttributesFromNamedMatches": false,
                        "OnlyCreateOneSubAttributePerGroup": true
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ¿ with ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "While \\d{2} or state<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "\\d\r\n|\r\n[,.]\\x20\r\n\\b(ALABAMA|ALASKA|AMERICAN\\s+SAMOA|ARIZONA|ARKANSAS|CALIFORNIA|COLORADO|CONNECTICUT|DELAWARE|DISTRICT\\s+OF\\s+COLUMBIA|FEDERATED\\s+STATES\\s+OF\\s+MICRONESIA|FLORIDA|GEORGIA|GUAM|HAWAII|IDAHO|ILLINOIS|INDIANA|IOWA|KANSAS|KENTUCKY|LOUISIANA|MAINE|MARSHALL\\s+ISLANDS|MARYLAND|MASSACHUSETTS|MICHIGAN|MINNESOTA|MISSISSIPPI|MISSOURI|MONTANA|NEBRASKA|NEVADA|NEW\\s+HAMPSHIRE|NEW\\s+JERSEY|NEW\\s+MEXICO|NEW\\s+YORK|NORTH\\s+CAROLINA|NORTH\\s+DAKOTA|NORTHERN\\s+MARIANA\\s+ISLANDS|OHIO|OKLAHOMA|OREGON|PALAU|PENNSYLVANIA|PUERTO\\s+RICO|RHODE\\s+ISLAND|SOUTH\\s+CAROLINA|SOUTH\\s+DAKOTA|TENNESSEE|TEXAS|UTAH|VERMONT|VIRGIN\\s+ISLANDS|VIRGINIA|WASHINGTON|WEST\\s+VIRGINIA|WISCONSIN|WYOMING|(?-i:AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY))\\b",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Exclude lines w/ \\d{2}<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Line",
          "MatchMultiplePagesPerDocument": true,
          "ClueList1": {
            "Clues": [
              "\\d",
              "\\b(ALABAMA|ALASKA|AMERICAN\\s+SAMOA|ARIZONA|ARKANSAS|CALIFORNIA|COLORADO|CONNECTICUT|DELAWARE|DISTRICT\\s+OF\\s+COLUMBIA|FEDERATED\\s+STATES\\s+OF\\s+MICRONESIA|FLORIDA|GEORGIA|GUAM|HAWAII|IDAHO|ILLINOIS|INDIANA|IOWA|KANSAS|KENTUCKY|LOUISIANA|MAINE|MARSHALL\\s+ISLANDS|MARYLAND|MASSACHUSETTS|MICHIGAN|MINNESOTA|MISSISSIPPI|MISSOURI|MONTANA|NEBRASKA|NEVADA|NEW\\s+HAMPSHIRE|NEW\\s+JERSEY|NEW\\s+MEXICO|NEW\\s+YORK|NORTH\\s+CAROLINA|NORTH\\s+DAKOTA|NORTHERN\\s+MARIANA\\s+ISLANDS|OHIO|OKLAHOMA|OREGON|PALAU|PENNSYLVANIA|PUERTO\\s+RICO|RHODE\\s+ISLAND|SOUTH\\s+CAROLINA|SOUTH\\s+DAKOTA|TENNESSEE|TEXAS|UTAH|VERMONT|VIRGIN\\s+ISLANDS|VIRGINIA|WASHINGTON|WEST\\s+VIRGINIA|WISCONSIN|WYOMING|(?-i:AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY))\\b"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n\\t ¯]*[^\\r\\n\\t ¯](?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n\\t ¯][^\\r\\n\\t¯]*"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked dbl newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region wont fit between replace with single newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(\\r\\n)+¦",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Else remove above if more than three lines follow<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "RegExprRule",
                      "Object": {
                        "IsRegExpFromFile": false,
                        "RegExpFileName": "",
                        "Pattern": "(?n-m)\r\n¦\\r\\n\r\n[^\\r\\n¿]{2,}\r\n(\\r\\n[^\\r\\n]+){3,}\r\n$",
                        "IsCaseSensitive": false,
                        "FirstMatchOnly": true,
                        "CreateSubAttributesFromNamedMatches": false,
                        "OnlyCreateOneSubAttributePerGroup": true
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ¿ with ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential EOL<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If EOL, mark with ¦<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If EOL, mark ¦<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isEOL.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "·¦",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has ¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Change to single if needed<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If no blank line above, remove extra newlines<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "¬[^\\r\\n\\t]+\\S[^\\r\\n\\t]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?:\\r\\n)+(\\r\\n)(?=¬)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "$1",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change · to ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "Is in test<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\isInTest.rsd.etf"
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark as component, mark next with focus<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Item is in this test so tag as component",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ü",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ä",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ñ",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "has a ¿\\S+<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¿\\S+",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Remove line with ¿\\S+<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "¿\\S+"
            ],
            "CaseSensitive": true,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "State name exists<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": true,
              "RegExpFileName": "<RSDFileDir>\\statenames.dat.etf",
              "Pattern": "",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Remove around state name<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "file://<RSDFileDir>\\statenames.dat.etf"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 1.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If very little space between, remove<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\validSpace.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change to ¦ if a column header<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\Shared\\isColumnHeader.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "First « to ¦<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "«",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": false,
                          "Replacement": "¦",
                          "ReplacementOccurrenceType": "First",
                          "SpecifiedOccurrence": 0
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Remove other marks<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¿([^»]*)»",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": false,
                          "Replacement": "$1",
                          "ReplacementOccurrenceType": "All",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace «»<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "first ¿ --> «<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "«",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "~ exists<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Check item<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If isFootnote remove tags<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isFootnote.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~«([^«»]+).»",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "$1",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "While ¤<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¤",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "LocateImageRegion",
              "Description": "DEBUG<Locate image region>",
              "Enabled": false,
              "Object": {
                "DataInsideBoundaries": true,
                "FindType": "Text",
                "ImageRegionText": "",
                "IncludeIntersectingEntities": true,
                "IntersectingEntityType": "Character",
                "MatchMultiplePagesPerDocument": true,
                "ClueList1": {
                  "Clues": [
                    ".(?=\\s*¤)"
                  ],
                  "CaseSensitive": false,
                  "Regex": true,
                  "RestrictByBoundary": false
                },
                "ClueList2": {
                  "Clues": [],
                  "CaseSensitive": false,
                  "Regex": false,
                  "RestrictByBoundary": false
                },
                "ClueList3": {
                  "Clues": [],
                  "CaseSensitive": false,
                  "Regex": false,
                  "RestrictByBoundary": false
                },
                "ClueList4": {
                  "Clues": [],
                  "CaseSensitive": false,
                  "Regex": false,
                  "RestrictByBoundary": false
                },
                "Left": {
                  "Anchor": "Page",
                  "AnchorSide": "Left",
                  "ExpandDirection": "ExpandLeft",
                  "ExpandBy": 0.0,
                  "ExpandUnits": "PageCharacters"
                },
                "Top": {
                  "Anchor": "ClueList1",
                  "AnchorSide": "Bottom",
                  "ExpandDirection": "ExpandUp",
                  "ExpandBy": 0.0,
                  "ExpandUnits": "ClueLines"
                },
                "Right": {
                  "Anchor": "ClueList1",
                  "AnchorSide": "Right",
                  "ExpandDirection": "ExpandRight",
                  "ExpandBy": 0.0,
                  "ExpandUnits": "ClueCharacters"
                },
                "Bottom": {
                  "Anchor": "ClueList1",
                  "AnchorSide": "Bottom",
                  "ExpandDirection": "ExpandDown",
                  "ExpandBy": 1.0,
                  "ExpandUnits": "ClueLines"
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If no text on next line, ¤ to § (alt21)<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\TextOnNextLine.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¤",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "§",
                    "ReplacementOccurrenceType": "All",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If text on next line, remove ¤<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\TextOnNextLine.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¤",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "All",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "First û to ¤<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "û",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¤",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "Is in test<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\isInTest.rsd.etf"
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark as component, mark next with focus<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Item is in this test so tag as component",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ü",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ä",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "Has clues on last page<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\proximityClues.rsd.etf"
        }
      },
      "ConditionValue": false,
      "Preprocessor": {
        "Type": "SelectPageRegion",
        "Description": "Remove last page<Select page region>",
        "Enabled": true,
        "Object": {
          "IncludeRegionDefined": false,
          "PageSelectionType": "SelectSpecified",
          "SpecificPages": "-1",
          "RegExpPageSelectionType": "SelectAllPagesWithRegExp",
          "Pattern": "",
          "IsRegExp": false,
          "IsCaseSensitive": false,
          "HorizontalStart": -1,
          "HorizontalEnd": -1,
          "VerticalStart": -1,
          "VerticalEnd": -1,
          "SelectPageRegionReturnType": "ReturnText",
          "IncludeIntersectingText": true,
          "TextIntersectionType": "Character",
          "SelectedRegionRotation": -1,
          "TextToAssignToRegion": ""
        }
      },
      "Iterations": 10,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has ~<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Remove false blank lines<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If not really a blank line remove<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "~[^\\r\\n\\t]+\\S[^\\r\\n\\t]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "\\r\\n(?=~)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change ` to ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "While é<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "é",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If below Party, é to â<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LoopConditions\\isMarkBelowParty.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "é",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "â",
                    "ReplacementOccurrenceType": "All",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove é<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "é",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "First Å to é<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Å",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "é",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Tag exists<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "Ç",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Validate item<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Mark as a Component",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isComponent.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "Mark as a Component without a Test",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isOrphan.rsd.etf"
                            }
                          },
                          "InvertCondition": false,
                          "Rule": {
                            "Type": "AdvancedReplaceString",
                            "Object": {
                              "StrToBeReplaced": "ü",
                              "AsRegularExpression": true,
                              "IsCaseSensitive": false,
                              "Replacement": "â",
                              "ReplacementOccurrenceType": "First",
                              "SpecifiedOccurrence": 0
                            }
                          }
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Mark as a Component",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "ü",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": false,
                          "Replacement": "ä",
                          "ReplacementOccurrenceType": "First",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If item failed to validate, remove tags",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^«»]+)ü»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change to Ä if a column header<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\Shared\\ReallyShortColumn\\isStartOfColumn.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "«",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "Ä",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace «»<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "first ¿ --> «<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "«",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "ForLoop",
      "Condition": {
        "Type": null,
        "Description": null,
        "Enabled": false,
        "Object": null
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "ä",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 3,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked dbl newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region fits horizontally between remove to the right of<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": false,
                    "IntersectingEntityType": "Line",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 1.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region fits horizontally between (the other way) remove to the right of<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2}[\\S\\s]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": false,
                    "IntersectingEntityType": "Line",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "[^\\r\\n]{2,}(?=\\s+¦)"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 1.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region wont fit between replace with single newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=\\s+¦)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(\\r\\n)+¦",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Else remove above if more than three lines follow<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "RegExprRule",
                      "Object": {
                        "IsRegExpFromFile": false,
                        "RegExpFileName": "",
                        "Pattern": "(?n-m)\r\n¦\\r\\n\r\n[^\\r\\n¿]{2,}\r\n(\\r\\n[^\\r\\n]+){3,}\r\n$",
                        "IsCaseSensitive": false,
                        "FirstMatchOnly": true,
                        "CreateSubAttributesFromNamedMatches": false,
                        "OnlyCreateOneSubAttributePerGroup": true
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=¦\\r\\n)[^\\r\\n¿]{2,}"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ¿ with ¦<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "There is no test on the first avail page<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "ConditionalValueFinder",
            "Object": {
              "Condition": {
                "Type": "RSDFileCondition",
                "Object": {
                  "RSDFileName": "<RSDFileDir>\\test_on_1st_page.rsd.etf"
                }
              },
              "InvertCondition": true,
              "Rule": {
                "Type": "LocateImageRegion",
                "Object": {
                  "DataInsideBoundaries": true,
                  "FindType": "Text",
                  "ImageRegionText": "",
                  "IncludeIntersectingEntities": true,
                  "IntersectingEntityType": "Character",
                  "MatchMultiplePagesPerDocument": false,
                  "ClueList1": {
                    "Clues": [
                      "[\\S\\s]*"
                    ],
                    "CaseSensitive": false,
                    "Regex": true,
                    "RestrictByBoundary": false
                  },
                  "ClueList2": {
                    "Clues": [],
                    "CaseSensitive": false,
                    "Regex": false,
                    "RestrictByBoundary": false
                  },
                  "ClueList3": {
                    "Clues": [],
                    "CaseSensitive": false,
                    "Regex": false,
                    "RestrictByBoundary": false
                  },
                  "ClueList4": {
                    "Clues": [],
                    "CaseSensitive": false,
                    "Regex": false,
                    "RestrictByBoundary": false
                  },
                  "Left": {
                    "Anchor": "Page",
                    "AnchorSide": "Left",
                    "ExpandDirection": "ExpandLeft",
                    "ExpandBy": 0.0,
                    "ExpandUnits": "Inches"
                  },
                  "Top": {
                    "Anchor": "Page",
                    "AnchorSide": "Top",
                    "ExpandDirection": "ExpandUp",
                    "ExpandBy": 0.0,
                    "ExpandUnits": "Inches"
                  },
                  "Right": {
                    "Anchor": "Page",
                    "AnchorSide": "Right",
                    "ExpandDirection": "ExpandRight",
                    "ExpandBy": 0.0,
                    "ExpandUnits": "Inches"
                  },
                  "Bottom": {
                    "Anchor": "Page",
                    "AnchorSide": "Bottom",
                    "ExpandDirection": "ExpandDown",
                    "ExpandBy": 0.0,
                    "ExpandUnits": "Inches"
                  }
                }
              }
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Exclude first avail page<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Character",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "[\\S\\s]*"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "Page",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "Page",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageLines"
          }
        }
      },
      "Iterations": 202,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential tab<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«\\s»",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If a tab, replace with tab char<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a tab, replace with tab char<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTab.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=«)\\s(?=»)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove tags<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«(\\s+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "has a \\bDate\\b|\\S+\\s?:<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "\\bDate\\b|\\S+\\s?:",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Remove line with \\bDate\\b|\\S+\\s?:<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "\\bDate\\b|\\S+\\s?:"
            ],
            "CaseSensitive": true,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "Page",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageLines"
          }
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If in a column, replace [made req higher due to RBC MORPHOLOGY on K:\\Common\\Engineering\\Sample Files\\West Bend\\Set005\\Images\\00000227.tif]<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 5.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.6,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.7,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 1
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 1
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 1
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked space remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=~)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=~)[^\\r\\n`]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\r\n\r\n",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has item pending<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "`",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Remove if crap<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "mark ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If crap, remove<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\short.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·«[^»]+»",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "«<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "«(?'text'([^»]+)»[\\s\\S]*?)(?'num'\\1)(?!»)",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "·${text}«${num}»",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 400,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential tab<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«\\s»",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If a tab, replace with tab char<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a tab, replace with tab char<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\..\\..\\isTab.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=«)\\s(?=»)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove tags<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«(\\s+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has ¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Insert extra if needed<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a blank line, double it<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "¬[^\\r\\n\\t]+\\S[^\\r\\n\\t]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "\\r\\n(?=¬)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "$0$0",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change · to ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "~<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n~]+(?=~)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=~)[^\\r\\n`]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "^.{0,2}(?~<error=4>Certified(\\W*)Filed(\\W*)&.or(\\W*)Recorded)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": false
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Character",
          "MatchMultiplePagesPerDocument": true,
          "ClueList1": {
            "Clues": [
              "^.{0,2}(?~<error=4>Certified(\\W*)Filed(\\W*)&.or(\\W*)Recorded)"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "ClueList1",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 2.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "ClueList1",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          }
        }
      },
      "Iterations": 5,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential component<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If component, mark appropriately<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isHeading.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If not indented, ...<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isIndented.rsd.etf"
                            }
                          },
                          "InvertCondition": true,
                          "Rule": {
                            "Type": "DocPreprocessorSequence",
                            "Object": {
                              "ObjectsVector": [
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "Mark «ä»<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "·[^\\r\\n\\t]+",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "«$0ä»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                },
                                {
                                  "Type": "ConditionalPreprocessor",
                                  "Description": "If an 'orphan', change ä to â<Conditionally preprocess>",
                                  "Enabled": true,
                                  "Object": {
                                    "Condition": {
                                      "Type": "RSDFileCondition",
                                      "Object": {
                                        "RSDFileName": "<RSDFileDir>\\isOrphan.rsd.etf"
                                      }
                                    },
                                    "InvertCondition": false,
                                    "Rule": {
                                      "Type": "AdvancedReplaceString",
                                      "Object": {
                                        "StrToBeReplaced": "(?<=«·[^«»]+)ä»",
                                        "AsRegularExpression": true,
                                        "IsCaseSensitive": true,
                                        "Replacement": "â»",
                                        "ReplacementOccurrenceType": "First",
                                        "SpecifiedOccurrence": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds change ¬ to Þ<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTestRow.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "Þ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "þ",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "Is in test<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\isInTest.rsd.etf"
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark as component, mark next with focus<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Item is in this test so tag as component",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ü",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ä",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "Ç",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n\\t ¯]*[^\\r\\n\\t ¯](?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n\\t ¯][^\\r\\n\\t¯]*"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Clue<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "(?inxs) \\b(?:STATE|COUNTY)\\b | (?~<>\\bSTATE.OF\\b)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "(?inxs) \\b(?:STATE|COUNTY)\\b | (?~<>\\bSTATE.OF\\b)"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "ClueList1",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 1.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "ClueList1",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 40.0,
            "ExpandUnits": "ClueCharacters"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 1.0,
            "ExpandUnits": "ClueLines"
          }
        }
      },
      "Iterations": 10,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential BOL<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If BOL, mark with ¦<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If BOL, mark ¦<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "·\\S"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦·",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "ForLoop",
      "Condition": {
        "Type": null,
        "Description": null,
        "Enabled": false,
        "Object": null
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "Date[^\\r\\n\\w]*of[^\\r\\n\\w]*Birth|(?~<error=3,method=better_fit>Date\\x20of\\x20Birth)",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 2,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide, replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If wide and left edge chars are wide, replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[A-HKM-SU-Z02-9]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n·]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If wide and right edge chars are wide, replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n¯]+(?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[A-HKM-SU-Z02-9]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 1.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has column break<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "(?n)\r\n\\t\r\n(\r\n    (?=[^\\r\\n]+\\r\\n)\r\n  | (?=[^\\r\\n])(?<=\\n[^\\r\\n]+)\r\n)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Trim off one side<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove right side of column break if more chars on left side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "(?<=\\t)\\S+"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "Page",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Remove left of column break if not more chars on that side<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\LBetterThanR.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "LocateImageRegion",
                  "Object": {
                    "DataInsideBoundaries": false,
                    "FindType": "Text",
                    "ImageRegionText": "",
                    "IncludeIntersectingEntities": true,
                    "IntersectingEntityType": "Character",
                    "MatchMultiplePagesPerDocument": false,
                    "ClueList1": {
                      "Clues": [
                        "\\S+(?=\\t)"
                      ],
                      "CaseSensitive": true,
                      "Regex": true,
                      "RestrictByBoundary": false
                    },
                    "ClueList2": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList3": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "ClueList4": {
                      "Clues": [],
                      "CaseSensitive": false,
                      "Regex": false,
                      "RestrictByBoundary": false
                    },
                    "Left": {
                      "Anchor": "Page",
                      "AnchorSide": "Left",
                      "ExpandDirection": "ExpandLeft",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageCharacters"
                    },
                    "Top": {
                      "Anchor": "Page",
                      "AnchorSide": "Top",
                      "ExpandDirection": "ExpandUp",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    },
                    "Right": {
                      "Anchor": "ClueList1",
                      "AnchorSide": "Right",
                      "ExpandDirection": "ExpandRight",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "ClueCharacters"
                    },
                    "Bottom": {
                      "Anchor": "Page",
                      "AnchorSide": "Bottom",
                      "ExpandDirection": "ExpandDown",
                      "ExpandBy": 0.0,
                      "ExpandUnits": "PageLines"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Iterations": 30,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds mark with Ç<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isCollectionDate.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "Ç",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark exists<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¦",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Remove line if has poor OCR conf<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change first mark to ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¦",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If poor OCR remove line<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\marked_line_poor_OCR.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "^[^\\r\\n]+\\s+·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "LoopPreprocessor",
              "Description": "Else if first char has poor OCR remove it until it doesn't<Loop preprocessor>",
              "Enabled": true,
              "Object": {
                "LoopType": "WhileLoop",
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Description": "While first char has poor OCR<RSD file condition>",
                  "Enabled": true,
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\first_char_marked_line_poor_OCR.rsd.etf"
                  }
                },
                "ConditionValue": true,
                "Preprocessor": {
                  "Type": "AdvancedReplaceString",
                  "Description": "Remove the first char<Advanced replace string>",
                  "Enabled": true,
                  "Object": {
                    "StrToBeReplaced": "(?n)^[^\\r\\n¦·]\\s*(?=[^\\r\\n]*\\s*(·|.\\z))",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                },
                "Iterations": 10,
                "LogExceptionForMaxIterations": false
              }
            },
            {
              "Type": "LoopPreprocessor",
              "Description": "Then if last char has poor OCR remove it until it doesn't<Loop preprocessor>",
              "Enabled": true,
              "Object": {
                "LoopType": "WhileLoop",
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Description": "While last char has poor OCR<RSD file condition>",
                  "Enabled": true,
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\last_char_marked_line_poor_OCR.rsd.etf"
                  }
                },
                "ConditionValue": true,
                "Preprocessor": {
                  "Type": "AdvancedReplaceString",
                  "Description": "Remove the last char<Advanced replace string>",
                  "Enabled": true,
                  "Object": {
                    "StrToBeReplaced": "\\s*[^\\r\\n](?=[\\r\\n]+·)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                },
                "Iterations": 10,
                "LogExceptionForMaxIterations": false
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change first ¬ to ¿<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¿",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change ¿ to « if isSection<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isSection.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¿",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "«",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove <Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "An unchecked newline remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "~",
              "IsCaseSensitive": true,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Replace if LIR fits between surrounding chars<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If image region fits between replace with double newline<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n]{2,}(?=~)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=~)[^\\r\\n`]{2,}"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "~",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\r\n\r\n",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "~",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "\r\n",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first ` with ~<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "~",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n\\t ¯]*[^\\r\\n\\t ¯](?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n\\t ¯][^\\r\\n\\t¯]*"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Change to a tab<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "¯",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": true,
                          "Replacement": "\t",
                          "ReplacementOccurrenceType": "First",
                          "SpecifiedOccurrence": 0
                        }
                      },
                      {
                        "Type": "AdvancedReplaceString",
                        "Description": "Replace all · with space<Advanced replace string>",
                        "Enabled": true,
                        "Object": {
                          "StrToBeReplaced": "·",
                          "AsRegularExpression": true,
                          "IsCaseSensitive": true,
                          "Replacement": " ",
                          "ReplacementOccurrenceType": "All",
                          "SpecifiedOccurrence": 0
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential BOL<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If BOL, mark with ¦<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If BOL, mark ¦<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "«·\\S"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦·",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential tab<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "«\\s»",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If a tab, replace with four spaces<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a tab, replace with four spaces<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTab.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=«)\\s(?=»)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "    ",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove tags<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "«(\\s+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential BOL<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If BOL, mark with ¦<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If BOL, mark ¦<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "·\\S"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦·",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 2001,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\t¯]*[^\\t ¯](?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\t ¯][^\\t¯]*"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else, replace with space<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change first ¬ to ¿<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¿",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Change ¿ to « if isTownship<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTownship.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¿",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "«",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else remove <Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¿([^»]+)»",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential BOL<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "If BOL, mark with ¦<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If BOL, mark ¦<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "·\\S"
                          ],
                          "CaseSensitive": false,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "Page",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 2.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "·",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "¦·",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a date marker<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "à",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Validate date<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark date as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "à",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Mark as Collection Date",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isCollectionDate.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "ü",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "Ç",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove markings if not a collection date",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(?=[^·üÇ]+ü)|ü¦?",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 200,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential component/test<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If component/test mark appropriately<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isHeading.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If component, mark ä<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isComponent.rsd.etf"
                            }
                          },
                          "InvertCondition": false,
                          "Rule": {
                            "Type": "AdvancedReplaceString",
                            "Object": {
                              "StrToBeReplaced": "·[^\\r\\n\\t]+(?=[\\r\\n\\t])",
                              "AsRegularExpression": true,
                              "IsCaseSensitive": true,
                              "Replacement": "«$0ä»",
                              "ReplacementOccurrenceType": "First",
                              "SpecifiedOccurrence": 0
                            }
                          }
                        }
                      },
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If test, mark é<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isTest.rsd.etf"
                            }
                          },
                          "InvertCondition": false,
                          "Rule": {
                            "Type": "AdvancedReplaceString",
                            "Object": {
                              "StrToBeReplaced": "·[^\\r\\n\\t«»]+(?=[\\r\\n\\t])",
                              "AsRegularExpression": true,
                              "IsCaseSensitive": true,
                              "Replacement": "«$0é»",
                              "ReplacementOccurrenceType": "First",
                              "SpecifiedOccurrence": 0
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "¯<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¯",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If really wide replace<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "ImageRegion",
                        "ImageRegionText": " ",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^\\r\\n\\t ¯]*[^\\r\\n\\t ¯](?=¯)"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [
                            "(?<=¯)[^\\r\\n\\t ¯][^\\r\\n\\t¯]*"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList2",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 4.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¯",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "\t",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "If normal size, revert<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¯",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": " ",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace first · with ¯<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¯",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "^\r\n(\r\n (?~<error=3>This(\\W*)section(\\W*)is(\\W*)not)\r\n|(?~<error=3>determining(\\W*)whether(\\W*)this)\r\n|(?~<error=3>listed(\\W*)as(\\W*)a(\\W*)convenience)\r\n|(?~<error=3>best(\\W*)describes(\\W*)the(\\W*)rea)\r\n)",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": false
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Character",
          "MatchMultiplePagesPerDocument": true,
          "ClueList1": {
            "Clues": [
              "^(?~<error=3,method=better_fit>This(\\W*)section(\\W*)is(\\W*)not)",
              "^(?~<error=3,method=better_fit>determining(\\W*)whether(\\W*)this)",
              "^(?~<error=3,method=better_fit>listed(\\W*)as(\\W*)a(\\W*)convenience)",
              "^(?~<error=3,method=better_fit>best(\\W*)describes(\\W*)the(\\W*)rea)"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "ClueList1",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          }
        }
      },
      "Iterations": 4,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a potential component<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "·",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If component, mark appropriately<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isHeading.rsd.etf"
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "DocPreprocessorSequence",
                  "Object": {
                    "ObjectsVector": [
                      {
                        "Type": "ConditionalPreprocessor",
                        "Description": "If not indented, ...<Conditionally preprocess>",
                        "Enabled": true,
                        "Object": {
                          "Condition": {
                            "Type": "RSDFileCondition",
                            "Object": {
                              "RSDFileName": "<RSDFileDir>\\isIndented.rsd.etf"
                            }
                          },
                          "InvertCondition": true,
                          "Rule": {
                            "Type": "DocPreprocessorSequence",
                            "Object": {
                              "ObjectsVector": [
                                {
                                  "Type": "AdvancedReplaceString",
                                  "Description": "Mark «ä»<Advanced replace string>",
                                  "Enabled": true,
                                  "Object": {
                                    "StrToBeReplaced": "·[^\\r\\n\\t]+",
                                    "AsRegularExpression": true,
                                    "IsCaseSensitive": true,
                                    "Replacement": "«$0ä»",
                                    "ReplacementOccurrenceType": "First",
                                    "SpecifiedOccurrence": 0
                                  }
                                },
                                {
                                  "Type": "ConditionalPreprocessor",
                                  "Description": "If an 'orphan', change ä to â<Conditionally preprocess>",
                                  "Enabled": true,
                                  "Object": {
                                    "Condition": {
                                      "Type": "RSDFileCondition",
                                      "Object": {
                                        "RSDFileName": "<RSDFileDir>\\isOrphan.rsd.etf"
                                      }
                                    },
                                    "InvertCondition": false,
                                    "Rule": {
                                      "Type": "AdvancedReplaceString",
                                      "Object": {
                                        "StrToBeReplaced": "(?<=«·[^«»]+)ä»",
                                        "AsRegularExpression": true,
                                        "IsCaseSensitive": true,
                                        "Replacement": "â»",
                                        "ReplacementOccurrenceType": "First",
                                        "SpecifiedOccurrence": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove focus mark<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first ` with ·<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "`",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "·",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 2001,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "DoLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": true,
              "RegExpFileName": "<RSDFileDir>\\excludeLines.dat.etf",
              "Pattern": "",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": false
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Character",
          "MatchMultiplePagesPerDocument": true,
          "ClueList1": {
            "Clues": [
              "file://<RSDFileDir>\\excludeLines.dat.etf"
            ],
            "CaseSensitive": false,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "ClueList1",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Right": {
            "Anchor": "ClueList1",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          },
          "Bottom": {
            "Anchor": "ClueList1",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "Inches"
          }
        }
      },
      "Iterations": 50,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "ForLoop",
      "Condition": {
        "Type": null,
        "Description": null,
        "Enabled": false,
        "Object": null
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "AdvancedReplaceString",
        "Description": "<Advanced replace string>",
        "Enabled": true,
        "Object": {
          "StrToBeReplaced": "[äâ]",
          "AsRegularExpression": true,
          "IsCaseSensitive": false,
          "Replacement": "",
          "ReplacementOccurrenceType": "First",
          "SpecifiedOccurrence": 0
        }
      },
      "Iterations": 500,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "A mark remains<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark appropriately<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If test succeeds change ¬ to ÞT<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isTestColHead.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "¬",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "ÞT",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Else change to T<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "T",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark first with ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "þ",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 100,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has ¬<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¬",
              "IsCaseSensitive": true,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Insert extra if needed<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "If a blank line, double it<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "¬[^\\r\\n\\t]+\\S[^\\r\\n\\t]+"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Left",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.5,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": true,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "\\r\\n(?=¬)",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": "$0$0",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "¬(.)",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "$1",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Change · to ¬<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¬",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 1000,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "Has a date marker<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "à",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Validate date<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark date as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "à",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Mark as Collection Date",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\isCollectionDate.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "ü",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "Ç",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Remove markings if not a collection date",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "·(?=[^·üÇ]+ü)|ü¦?",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 200,
      "LogExceptionForMaxIterations": true
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "has a ¿\\S+<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "¿\\S+",
              "IsCaseSensitive": false,
              "FirstMatchOnly": true,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "LocateImageRegion",
        "Description": "Remove line with ¿\\S+<Locate image region>",
        "Enabled": true,
        "Object": {
          "DataInsideBoundaries": false,
          "FindType": "Text",
          "ImageRegionText": "",
          "IncludeIntersectingEntities": true,
          "IntersectingEntityType": "Word",
          "MatchMultiplePagesPerDocument": false,
          "ClueList1": {
            "Clues": [
              "¿\\S+"
            ],
            "CaseSensitive": true,
            "Regex": true,
            "RestrictByBoundary": false
          },
          "ClueList2": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList3": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "ClueList4": {
            "Clues": [],
            "CaseSensitive": false,
            "Regex": false,
            "RestrictByBoundary": false
          },
          "Left": {
            "Anchor": "Page",
            "AnchorSide": "Left",
            "ExpandDirection": "ExpandLeft",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Top": {
            "Anchor": "ClueList1",
            "AnchorSide": "Top",
            "ExpandDirection": "ExpandUp",
            "ExpandBy": 0.0,
            "ExpandUnits": "ClueLines"
          },
          "Right": {
            "Anchor": "Page",
            "AnchorSide": "Right",
            "ExpandDirection": "ExpandRight",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageCharacters"
          },
          "Bottom": {
            "Anchor": "Page",
            "AnchorSide": "Bottom",
            "ExpandDirection": "ExpandDown",
            "ExpandBy": 0.0,
            "ExpandUnits": "PageLines"
          }
        }
      },
      "Iterations": 20,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "[^¦]\\r<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "[^¦]\\r",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Replace with ' \\r\\n' if stuff to the right<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "FindingRuleCondition",
                  "Object": {
                    "AFRule": {
                      "Type": "LocateImageRegion",
                      "Object": {
                        "DataInsideBoundaries": true,
                        "FindType": "Text",
                        "ImageRegionText": "",
                        "IncludeIntersectingEntities": true,
                        "IntersectingEntityType": "Character",
                        "MatchMultiplePagesPerDocument": false,
                        "ClueList1": {
                          "Clues": [
                            "[^¦]\\r"
                          ],
                          "CaseSensitive": true,
                          "Regex": true,
                          "RestrictByBoundary": false
                        },
                        "ClueList2": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList3": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "ClueList4": {
                          "Clues": [],
                          "CaseSensitive": false,
                          "Regex": false,
                          "RestrictByBoundary": false
                        },
                        "Left": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandLeft",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "ClueCharacters"
                        },
                        "Top": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Top",
                          "ExpandDirection": "ExpandDown",
                          "ExpandBy": 0.1,
                          "ExpandUnits": "ClueLines"
                        },
                        "Right": {
                          "Anchor": "Page",
                          "AnchorSide": "Right",
                          "ExpandDirection": "ExpandRight",
                          "ExpandBy": 0.0,
                          "ExpandUnits": "PageCharacters"
                        },
                        "Bottom": {
                          "Anchor": "ClueList1",
                          "AnchorSide": "Bottom",
                          "ExpandDirection": "ExpandUp",
                          "ExpandBy": 0.1,
                          "ExpandUnits": "ClueLines"
                        }
                      }
                    }
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "(?<=[^¦])\\r\\n",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": true,
                    "Replacement": " $0",
                    "ReplacementOccurrenceType": "First",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Replace with '¦\\r\\n'<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "(?<=[^¦])\\r\\n",
                "AsRegularExpression": true,
                "IsCaseSensitive": true,
                "Replacement": "¦$0",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 10,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "FindingRuleCondition",
        "Description": "While SSì<Finding rule condition>",
        "Enabled": true,
        "Object": {
          "AFRule": {
            "Type": "RegExprRule",
            "Object": {
              "IsRegExpFromFile": false,
              "RegExpFileName": "",
              "Pattern": "SSì",
              "IsCaseSensitive": false,
              "FirstMatchOnly": false,
              "CreateSubAttributesFromNamedMatches": false,
              "OnlyCreateOneSubAttributePerGroup": true
            }
          }
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "ConditionalPreprocessor",
              "Description": "Check for low OCR confidence of clue<Conditionally preprocess>",
              "Enabled": true,
              "Object": {
                "Condition": {
                  "Type": "RSDFileCondition",
                  "Object": {
                    "RSDFileName": "<RSDFileDir>\\ClueRemoval\\LowOCRConfidenceClue.rsd.etf"
                  }
                },
                "InvertCondition": false,
                "Rule": {
                  "Type": "AdvancedReplaceString",
                  "Object": {
                    "StrToBeReplaced": "\\bSSì",
                    "AsRegularExpression": true,
                    "IsCaseSensitive": false,
                    "Replacement": "So Sayeth",
                    "ReplacementOccurrenceType": "All",
                    "SpecifiedOccurrence": 0
                  }
                }
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "SSì to SS<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "SSì",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "SS",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "First SSî to SSì<Advanced replace string>",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "SSî",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "SSì",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 25,
      "LogExceptionForMaxIterations": false
    }
  },
  {
    "Type": "LoopPreprocessor",
    "Description": "",
    "Enabled": true,
    "Object": {
      "LoopType": "WhileLoop",
      "Condition": {
        "Type": "RSDFileCondition",
        "Description": "This component is for this date<RSD file condition>",
        "Enabled": true,
        "Object": {
          "RSDFileName": "<RSDFileDir>\\is_for_date.rsd.etf"
        }
      },
      "ConditionValue": true,
      "Preprocessor": {
        "Type": "DocPreprocessorSequence",
        "Description": "Mark as component, mark next with focus<Select multiple document preprocessors>",
        "Enabled": true,
        "Object": {
          "ObjectsVector": [
            {
              "Type": "AdvancedReplaceString",
              "Description": "Item is for this date so tag as component",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "ü",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ä",
                "ReplacementOccurrenceType": "All",
                "SpecifiedOccurrence": 0
              }
            },
            {
              "Type": "AdvancedReplaceString",
              "Description": "Mark item as under examination",
              "Enabled": true,
              "Object": {
                "StrToBeReplaced": "à",
                "AsRegularExpression": true,
                "IsCaseSensitive": false,
                "Replacement": "ü",
                "ReplacementOccurrenceType": "First",
                "SpecifiedOccurrence": 0
              }
            }
          ]
        }
      },
      "Iterations": 200,
      "LogExceptionForMaxIterations": true
    }
  }
]