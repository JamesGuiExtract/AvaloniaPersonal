//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Extract.DataEntry.Properties {


    /// <summary>
    /// 
    /// </summary>
    /// <seealso cref="System.Configuration.ApplicationSettingsBase" />
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        /// <summary>
        /// Gets the default.
        /// </summary>
        /// <value>
        /// The default.
        /// </value>
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }

        /// <summary>
        /// Gets the name of the data entry panel file.
        /// </summary>
        /// <value>
        /// The name of the data entry panel file.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DataEntryPanelFileName {
            get {
                return ((string)(this["DataEntryPanelFileName"]));
            }
        }

        /// <summary>
        /// Gets the highlight confidence boundary.
        /// </summary>
        /// <value>
        /// The highlight confidence boundary.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string HighlightConfidenceBoundary {
            get {
                return ((string)(this["HighlightConfidenceBoundary"]));
            }
        }

        /// <summary>
        /// Gets the type of the database.
        /// </summary>
        /// <value>
        /// The type of the database.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("System.Data.SqlServerCe.SqlCeConnection, System.Data.SqlServerCe, Version=3.5.1.0" +
            ", Culture=neutral, PublicKeyToken=89845dcd8080cc91")]
        public string DatabaseType {
            get {
                return ((string)(this["DatabaseType"]));
            }
        }

        /// <summary>
        /// Gets the local data source.
        /// </summary>
        /// <value>
        /// The local data source.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LocalDataSource {
            get {
                return ((string)(this["LocalDataSource"]));
            }
        }

        /// <summary>
        /// Gets the database connection string.
        /// </summary>
        /// <value>
        /// The database connection string.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DatabaseConnectionString {
            get {
                return ((string)(this["DatabaseConnectionString"]));
            }
        }

        /// <summary>
        /// Gets the disabled controls.
        /// </summary>
        /// <value>
        /// The disabled controls.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DisabledControls {
            get {
                return ((string)(this["DisabledControls"]));
            }
        }

        /// <summary>
        /// Gets the disabled validation controls.
        /// </summary>
        /// <value>
        /// The disabled validation controls.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DisabledValidationControls {
            get {
                return ((string)(this["DisabledValidationControls"]));
            }
        }

        /// <summary>
        /// Gets the skip validation if document tagged as.
        /// </summary>
        /// <value>
        /// The skip validation if document tagged as.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SkipValidationIfDocTaggedAs {
            get {
                return ((string)(this["SkipValidationIfDocTaggedAs"]));
            }
        }

        /// <summary>
        /// Gets a value indicating whether [prevent save].
        /// </summary>
        /// <value>
        ///   <c>true</c> if [prevent save]; otherwise, <c>false</c>.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PreventSave {
            get {
                return ((bool)(this["PreventSave"]));
            }
        }

        /// <summary>
        /// Gets the gc frequency.
        /// </summary>
        /// <value>
        /// The gc frequency.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public uint GCFrequency {
            get {
                return ((uint)(this["GCFrequency"]));
            }
        }

        /// <summary>
        /// Gets the font family.
        /// </summary>
        /// <value>
        /// The font family.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Verdana")]
        public string FontFamily {
            get {
                return ((string)(this["FontFamily"]));
            }
        }

        /// <summary>
        /// Gets the size of the control font.
        /// </summary>
        /// <value>
        /// The size of the control font.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public float ControlFontSize {
            get {
                return ((float)(this["ControlFontSize"]));
            }
        }

        /// <summary>
        /// Gets the size of the tooltip font.
        /// </summary>
        /// <value>
        /// The size of the tooltip font.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("13")]
        public float TooltipFontSize {
            get {
                return ((float)(this["TooltipFontSize"]));
            }
        }

        /// <summary>
        /// Gets a value indicating whether [performance testing].
        /// </summary>
        /// <value>
        ///   <c>true</c> if [performance testing]; otherwise, <c>false</c>.
        /// </value>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PerformanceTesting {
            get {
                return ((bool)(this["PerformanceTesting"]));
            }
        }
    }
}
