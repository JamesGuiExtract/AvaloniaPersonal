/* 
 * Document API
 *
 * Extract Document API documentation
 *
 * OpenAPI spec version: v1
 * Contact: developers@extractsystems.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DocumentApiTests
    {
        private DocumentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DocumentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DocumentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DocumentApi
            //Assert.IsInstanceOfType(typeof(DocumentApi), instance, "instance is a DocumentApi");
        }

        
        /// <summary>
        /// Test ApiDocumentGetDocumentTypeGet
        /// </summary>
        [Test]
        public void ApiDocumentGetDocumentTypeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string documentId = null;
            //instance.ApiDocumentGetDocumentTypeGet(documentId);
            
        }
        
        /// <summary>
        /// Test ApiDocumentGetFileResultExGet
        /// </summary>
        [Test]
        public void ApiDocumentGetFileResultExGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ApiDocumentGetFileResultExGet();
            
        }
        
        /// <summary>
        /// Test ApiDocumentGetFileResultGet
        /// </summary>
        [Test]
        public void ApiDocumentGetFileResultGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileId = null;
            //var response = instance.ApiDocumentGetFileResultGet(fileId);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ApiDocumentGetResultSetByIdGet
        /// </summary>
        [Test]
        public void ApiDocumentGetResultSetByIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiDocumentGetResultSetByIdGet(id);
            //Assert.IsInstanceOf<DocumentAttributeSet> (response, "response is DocumentAttributeSet");
        }
        
        /// <summary>
        /// Test ApiDocumentGetStatusGet
        /// </summary>
        [Test]
        public void ApiDocumentGetStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string stringId = null;
            //var response = instance.ApiDocumentGetStatusGet(stringId);
            //Assert.IsInstanceOf<List<ProcessingStatus>> (response, "response is List<ProcessingStatus>");
        }
        
        /// <summary>
        /// Test ApiDocumentGetTextResultGet
        /// </summary>
        [Test]
        public void ApiDocumentGetTextResultGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string textId = null;
            //var response = instance.ApiDocumentGetTextResultGet(textId);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ApiDocumentSubmitFilePost
        /// </summary>
        [Test]
        public void ApiDocumentSubmitFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ApiDocumentSubmitFilePost();
            
        }
        
        /// <summary>
        /// Test ApiDocumentSubmitTextPost
        /// </summary>
        [Test]
        public void ApiDocumentSubmitTextPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubmitTextArgs args = null;
            //instance.ApiDocumentSubmitTextPost(args);
            
        }
        
    }

}
