<UserControl
    x:Class="Extract.Web.ApiConfiguration.Views.ApiConfigMgmtView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:vm="clr-namespace:Extract.Web.ApiConfiguration.ViewModels;assembly=Extract.Web.ApiConfiguration"
    xmlns:v="clr-namespace:Extract.Web.ApiConfiguration.Views"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=vm:ApiConfigMgmtViewModel, IsDesignTimeCreatable=False}"
    d:DesignHeight="450" d:DesignWidth="800">

  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <!--Button style-->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Margin" Value="5,0"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="Height" Value="20"/>
      <Style.Resources>
        <Style TargetType="Border">
          <Setter Property="CornerRadius" Value="3" />
        </Style>
      </Style.Resources>
    </Style>

    <!--For some reason error tooltips not working by default...-->
    <Style TargetType="TextBox">
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="ToolTip" 
                  Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="ComboBox">
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="ToolTip" 
                  Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox">
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="ToolTip" 
                  Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
        </Trigger>
      </Style.Triggers>
    </Style>

  </UserControl.Resources>

  <Grid Margin="5">

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="4"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <!--List of configurations-->
    <DataGrid ItemsSource="{Binding Configurations}" SelectedValue="{Binding SelectedConfigurationID}" SelectedValuePath="ID"
              Grid.Row="0" Grid.Column="0"
              AutoGenerateColumns="False"
              VerticalScrollBarVisibility="Visible"
              HorizontalGridLinesBrush="LightGray"
              VerticalGridLinesBrush="LightGray">
      <DataGrid.Columns>
        <DataGridTextColumn Header="Name" Binding="{Binding ConfigurationNamePlus, Mode=OneWay}"/>
        <DataGridTextColumn Header="Workflow" Binding="{Binding WorkflowName, Mode=OneWay}"/>
        <DataGridTextColumn Header="Type" Binding="{Binding ConfigurationDisplayType, Mode=OneTime}"/>
        <DataGridCheckBoxColumn Header="Default" Binding="{Binding IsDefault, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
      </DataGrid.Columns>
    </DataGrid>

    <GridSplitter Grid.Column="1"
          HorizontalAlignment="Left"
          VerticalAlignment="Stretch"
          Background="LightGray"
          ShowsPreview="true"
          Width="4"/>

    <!--Configuration details child view-->
    <ContentControl Grid.Row="0" Grid.Column="2"
                    Content="{Binding SelectedConfiguration}"
                    Visibility="{Binding HasSelectedConfiguration, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}">
      <ContentControl.Resources>
        <DataTemplate DataType="{x:Type vm:RedactionApiConfigViewModel}">
          <v:RedactionApiConfigView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DocumentApiConfigViewModel}">
          <v:DocumentApiConfigView/>
        </DataTemplate>
      </ContentControl.Resources>
    </ContentControl>

    <!--Panel that is shown when adding a new configuration-->
    <StackPanel Grid.Row="0" Grid.Column="2"
                Orientation="Vertical"
                Visibility="{Binding HasAddNewConfiguration, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}">

      <TextBlock x:Name="textBlock" Text="Add new web API configuration"
                 FontSize="14" Margin="10,10,10,50" HorizontalAlignment="Center"/>

      <Label Content="Configuration type:" Target="{Binding ElementName=newConfigurationType}" />
      <ComboBox ItemsSource="{Binding ConfigurationTypes}" SelectedItem="{Binding NewConfigurationType}"
                Name="newConfigurationType" Padding="2,3,2,2" Margin="5,0,0,5" />

      <Button Content="Add Configuration" Command="{Binding AddConfigurationCommand}"
              Margin="0,5" HorizontalAlignment="Center" />
    </StackPanel>

    <!--Put Save and Close buttons first in the xaml so that they will come before the Add and Remove buttons in the tab order-->
    <StackPanel Grid.Row="1" Grid.Column="2" Margin="0,5,20,0" Orientation="Horizontal"
                HorizontalAlignment="Center" VerticalAlignment="Center">
      <Button Content="Save" Command="{Binding SelectedConfiguration.SaveCommand}"
              Visibility="{Binding HasSelectedConfiguration, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}" />
      <Button Content="Close" Command="{Binding CloseCommand}" IsCancel="true"/>
    </StackPanel>

    <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,15,0,10" Orientation="Horizontal"
                HorizontalAlignment="Center" VerticalAlignment="Center">
      <Button Content="Add" Command="{Binding ShowAddConfigurationCommand}"/>
      <Button Content="Remove" Command="{Binding DeleteSelectedConfigurationCommand}"/>
    </StackPanel>

  </Grid>
</UserControl>
