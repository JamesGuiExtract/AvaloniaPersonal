{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f30\froman\fcharset238\fprq2 Times New Roman CE;}{\f31\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f33\froman\fcharset161\fprq2 Times New Roman Greek;}{\f34\froman\fcharset162\fprq2 Times New Roman Tur;}{\f35\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f36\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f37\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}}{\info{\title FxCop usage guidelines}{\author nathan_figueroa}{\operator nathan_figueroa}{\creatim\yr2008\mo5\dy7\hr8\min45}
{\revtim\yr2008\mo5\dy16\hr11\min48}{\version3}{\edmins62}{\nofpages2}{\nofwords439}{\nofchars2507}{\*\company Extract Systems LLC}{\nofcharsws0}{\vern8247}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {FxCop Usage Guidelines
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par FxCop analyzes managed code assemblies for conformance to pre-specified design guidelines. \line 
\par }\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Installation
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par To install FxCop for use with Visual Studio
\par 
\par 1) Download FxCop from the Microsoft website. Follow Microsoft\rquote s installation instructions. As of this writing, the most recent FxCop release is }{\field\fldedit{\*\fldinst { HYPERLINK "http://www.microsoft.com/downloads/details.aspx?family
id=3389F7E4-0E55-4A4D-BC74-4AEABB17997B&displaylang=en" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90bf200000068007400740070003a002f002f007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f0064006f0077006e006c006f006100640073002f00640065007400610069006c00
73002e0061007300700078003f00660061006d0069006c007900690064003d00330033003800390046003700450034002d0030004500350035002d0034004100340044002d0042004300370034002d00340041004500410042004200310037003900390037004200260064006900730070006c00610079006c0061006e0067
003d0065006e000000795881f43b1d7f48af2c825dc485276300000000a5ab0000}}}{\fldrslt {\cs15\ul\cf2 FxCop 1.36 Beta 2}}}{.
\par 2) Add the FxCop directory to your machine\rquote s path environment variable. For example, the default path for the current FxCop version is C:\\PROGRA~1\\Microsoft FxCop 1.36\\ .
\par \line }{\b Integration into Visual Studio 2005 }{
\par 
\par To integrate FxCop into the build process of Visual Studio 2005:
\par \line 1) Execute a post build batch file in the debug post-build event for all assemblies. The post build batch files are explained in greater detail below\line 
2) Define the CODE_ANALYSIS macro in debug mode for all assemblies, to allow the suppression of FxCop messages with SuppressMessage attributes. \line 
3) Apply SuppressMessage attributes to offending code in rare instances when design guidelines should be ignored. \line \line }{\b Post build batch files}{
\par 
\par CommonDebugPostBuild.bat "$(TargetPath)"
\par \line Add appropriate post build batch file to assembly\rquote s post build event. In most cases for a distributable assembly, add the CommonDebugPostBuild.bat. For NUnit testing assemblies, add th
e UnitTestingDebugPostBuild.bat. These batch files are available on the I:/Common/Engineering/Tools/Utils directory, and so should already be in the environment path. They reference the FxCopCmd executable explained below.
\par 
\par }{\b FxCopCmd}{
\par 
\par FxCopCmd.exe /file:"<FILENAME>" /console /quiet /ruleid:-<RULEID>\line \line \~\~ file option
\par \~\~\~\~\~ Targets the built assembly for FxCop analysis. \line \line \~\~ console option: \line \~\~\~\~\~ Displays output using FxCopRichConsoleOutput.xsl file. The advantages of this xsl file is explained in detail below. \line 
\par    quiet option:
\par \~\~\~\~\~ Only displays FxCop warnings; does not show \lquote Loading dll\rquote  messages, etc.
\par 
\par    ruleid option:
\par \~\~\~\~\~ Adds or (as shown above) subtracts a specific rule from being executed.
\par 
\par \~\~ rule option [/rule:"<FxCopDir>\\Rules"]:\line \~\~\~\~\~ Specifies a directory containing rule files to apply. In the future, this option can be added to allow custom rules to enforce Extract Systems-specific design guidelines. \line \line }{\b 
FxCopRichConsoleOutput.xsl features}{ 
\par \line \~\~ - When used in post-build event, error messages display in Error List window. \line \~\~ - Error list items can be double-clicked to jump to the offending line of code. \line \~\~
 - When the error list item is selected, F1 brings up more information about the FxCop message. \line \~\~ - Can be customized to display as per individual preferences. \line \~\~
 - In future, Visual Studio macro can be written to generate suppress message for individual error list items, thereby reducing reliance on FxCop GUI. \line \line }{\b Suppress messages}{ 
\par \line \~\~ - Generate at the source code level to suppress the display of specific FxCop messages. \line \~\~\~\~\~
 a. Suppressing messages at the code level allows such suppression to be seamlessly integrated with the Extract Systems code review process. Developers are forced to justify FxCop message suppressions when their code changes are reviewed. \line \~\~\~\~\~
 b. Messages can be suppressed for a particular instance of a design violation without suppressing other violations of the same kind. For instance, if a particular assembly is marked to ignore the AssembliesMustBeStrongNamed rule, th
is rule would still be enforced for other assemblies. 
\par \line \~\~ - Prefer generating suppress messages at the location of the violation, rather than at the module level.
\par       a. Generating at the source of the violation clearly associates the suppression message with the code that generated the offense. \line \~\~\~\~\~
 b. If the offending code is changed, the suppression message can easily be removed because it is closely associated with the code where the violation took place.
\par 
\par }}