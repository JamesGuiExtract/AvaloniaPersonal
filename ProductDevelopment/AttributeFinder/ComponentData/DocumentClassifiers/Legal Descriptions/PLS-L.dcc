// ******************************************************************************************
// 				PLS-L.dcc
// 
// NOTES:
// 1) This file can contain 4 sections, ZERO, SURE, PROBABLE and MAYBE
// 2) ZERO section must be placed ahead of any other sections if some exclusive expressions
//    that will disqualify the document as such type need to be acknowledged. For instance,
//    if the input document contains text such as "subordination", this document will be classified
//    as "Assignment Of Mortgage" at ZERO level.
// 3) Each section shall start with [<Section Name>_BEGIN] and end with [<Section Name>_END]
// 4) Each section contains 0 or more criteria, where the criteria is either OR, AND or SIGNLE
// 5) At least one of the appropriate criteria must be met for the document to be considered
//    as either a sure, probable, maybe or zero document
// 6) Each criteria is specified in the following format:
//    <CRITERIA>_BEGIN,dStartingRange,dEndingRange,bCaseSensitive,nStartPageNum,nEndPageNum
//    expression1
//    expression2
//    ......
//    <CRITERIA>_END
// 7) Each expression must use Regular Expression syntex. Refer to JScript or VBScript's 
//    Regular Expression help file.
// 8) The AND and OR criteria must have two or more expressions
// 9) "dStartingRange" and "dEndingRange" indicate the range of input text within which the
//    search must be done. Their value shall be in between 0 and 1. For example, specifying
//    0,0.25 indicates that the top quarter of text should be searched for the criteria.
// 10) Using #import statement to include a file. The syntex is similar to C++ syntex, where
//     a file name must be enclosed in a pair of quotes. The file name must either be fully
//     specified, or without specifying the full path. In the latter case, the file name could
//     be a relative path (e.g. #import "..\..\Abc.dcc") or without any path (e.g. #import "Abc.dcc").
// 11) Relationship among each SINGLE/OR/AND block within a section is OR relation.
// 12) Special meaning for start/end page numbers:
//     startPage = -1 OR > 0; endPage = -1 OR > 0
//     If startPage == -1, then the endPage field represents the "last X pages".
//     If endPage == -1, then the search should go from the specified start page to the last page in the document.
//     If startPage == endPage == -1, then that's an error condition.
//
// ******************************************************************************************



// **********
// Zero Block
// **********
[ZERO_BEGIN]
SINGLE_BEGIN,0,1,false,1,-1
block\s+\d
SINGLE_END

[ZERO_END]

// **********
// Sure Block
// **********
[SURE_BEGIN]

// DT:0014

AND_BEGIN,0,1,false,1,-1
Sec(tion|\.)?s?\s+(ONE|TWO|THREE|(FOUR(TEEN)?)|FIVE|(SIX(TY|TEEN)?)|(SEVEN(TY|TEEN)?)|(EIGHT(TY|TEEN)?)|(NINE(TY|TEEN)?)|TEN|ELEVEN|TWELVE|THIRTEEN|FIFETEEN|TWENTY|THIRTY|FORTY|FIFTY|HUNDRED|THOUSAND)?[\s\(]*\d
T[\.\s]*(OWN)?(SHIP)?\s*(ONE|TWO|THREE|(FOUR(TEEN)?)|FIVE|(SIX(TY|TEEN)?)|(SEVEN(TY|TEEN)?)|(EIGHT(TY|TEEN)?)|(NINE(TY|TEEN)?)|TEN|ELEVEN|TWELVE|THIRTEEN|FIFETEEN|TWENTY|THIRTY|FORTY|FIFTY|HUNDRED|THOUSAND)?[\s\(]*\d+[\s\)]*(N\b|S\b|NORTH|SOUTH)
//RANGE\s+\d\s+(\bE\b|\bW\b|EAST|WEST)
//T\d(N|S)
//R\d(E|W)
AND_END



[SURE_END]

// **************
// Probable Block'/
// **************


