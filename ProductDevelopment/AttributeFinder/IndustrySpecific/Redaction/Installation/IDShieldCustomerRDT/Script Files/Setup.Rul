/////////////////////////////////////////////////////////////////////////////
//                                                                            
//  File Name:    Setup.rul                                                   
//                                                                            
//  Description:  InstallShield script                                          
//                                                                            
//  Comments:     This minimal project is intended for advanced users. 
//                To create a robust project with step-by-step 
//				  instructions, use the Project Wizard. 
//                                                                                                               
/////////////////////////////////////////////////////////////////////////////

// Include header files /////////////////////////////////////////////////////
#include "ifx.h"

////////////////////// string defines ////////////////////////////
    #define EXTRACT_DIR "\\Extract Systems\\CommonComponents"
//////////////////// installation declarations ///////////////////

    // In order to have your InstallScript function executed as a custom
    // action by the Windows Installer, it must be prototyped as an 
    // entry-point function.

    // The keyword export identifies MyFunction() as an entry-point function.
    // The argument it accepts must be a handle to the Installer database.
    
      /* export prototype MyFunction(HWND); */  

    // To Do:  Declare global variables, define constants, and prototype user-
    //         defined and DLL functions here.


// ----- DLL function prototypes -----


    // your DLL function prototypes
    prototype detectFlexIndexSDKInstall();


// ---- script function prototypes -----


    // your script function prototypes

    // your global variables



///////////////////////////////////////////////////////////////////////////////
//                                                                           
//  FUNCTION:   OnFirstUIBefore                                            
//                                                                           
//  EVENT:      FirstUIBefore event is sent when installation is run for the first
//              time on given machine. In the handler installation usually displays
//              UI allowing end user to specify installation parameters. After this
//              function returns, ComponentTransferData is called to perform file
//              transfer.
//                                                                           
///////////////////////////////////////////////////////////////////////////////
function OnFirstUIBefore()
    NUMBER nResult, nSetupType, nvSize, nUser;
    STRING szTitle, szMsg, szQuestion, svName, svCompany, szFile;
    STRING szLicenseFile;
    LIST list, listStartCopy;
    BOOL bCustom;
begin	
    // TO DO: if you want to enable background, window title, and caption bar title                                                                   
    // SetTitle( @PRODUCT_NAME, 24, WHITE );                                        
    // SetTitle( @PRODUCT_NAME, 0, BACKGROUNDCAPTION ); 	                  
    // Enable( FULLWINDOWMODE );						   
    // Enable( BACKGROUND );							  
    // SetColor(BACKGROUND,RGB (0, 128, 128));					   

    SHELL_OBJECT_FOLDER = @PRODUCT_NAME;	   
    
    nSetupType = TYPICAL;	

	// check installed Flex Index SDK
	detectFlexIndexSDKInstall();

Dlg_SdWelcome:
    szTitle = "";
    szMsg   = "";
    nResult = SdWelcome(szTitle, szMsg);
    if (nResult = BACK) goto Dlg_SdWelcome;
	
    szTitle   = "";
    svName    = "";
    svCompany = "";    
    
    // Set destination path according to the registry key
Dlg_SdLicense:
	nResult = SdLicense2(szTitle, "", "", "License.txt", FALSE);
	if nResult = BACK goto Dlg_SdWelcome;
	
Dlg_SdStartCopy:
    if (nResult = BACK) then
    	goto Dlg_SdLicense;
    endif;

    // setup default status
    Enable(STATUSEX);
 
    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   OnFirstUIAfter
//
//  EVENT:      FirstUIAfter event is sent after file transfer, when installation 
//              is run for the first time on given machine. In this event handler 
//              installation usually displays UI that will inform end user that
//              installation has been completed successfully.
//
///////////////////////////////////////////////////////////////////////////////
function OnFirstUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOption1, szOption2, szRegAllCmdLine, szCmd;
    NUMBER bOpt1, bOpt2;
begin
                                                                                                                                  
    // Register Dlls
	RunRegisterAll();
    Disable(STATUSEX);
	
    bOpt1  = FALSE;
    bOpt2  = FALSE;
    szMsg1 = SdLoadString(IFX_SDFINISH_MSG1);
    SdFinishEx(szTitle, szMsg1, szMsg2, szOption1, szOption2, bOpt1, bOpt2);
end; 

///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   detectFlexIndexSDKInstall
//
//  EVENT:      Check for installed FlexIndexSDK
//
///////////////////////////////////////////////////////////////////////////////
function detectFlexIndexSDKInstall()
	STRING strSDKUninstallKey, strIDShieldUninstallKey;
	NUMBER nSize, nType;
begin     
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	// check uninstall key in registry     
	strIDShieldUninstallKey = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\InstallShield_{158160CD-7B55-462F-8477-7E18B2937D40}";
	
	if (RegDBKeyExist(strSDKUninstallKey) < 0 && RegDBKeyExist(strIDShieldUninstallKey) < 0) then
		// this means Flex Index SDK is not installed 
		// on the target machine
		MessageBox("ID Shield must be installed before this installation can run. Setup will terminate.", SEVERE);
		abort;
	endif;	
	
	return 0;
end;						
// --- include script file section ---


