{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f31\froman\fcharset238\fprq2 Times New Roman CE;}{\f32\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f34\froman\fcharset161\fprq2 Times New Roman Greek;}{\f35\froman\fcharset162\fprq2 Times New Roman Tur;}{\f36\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f37\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f38\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\qc \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-1071631236\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2160\jclisttab\tx2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li4320\jclisttab\tx4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6480\jclisttab\tx6480 }{\listname ;}\listid700473806}{\list\listtemplateid-662540658\listhybrid{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc4\levelnfcn4
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc2
\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2880\jclisttab\tx2880 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }
{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li4320
\jclisttab\tx4320 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 
\fi-180\li5040\jclisttab\tx5040 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li6480\jclisttab\tx6480 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}
\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li7200\jclisttab\tx7200 }{\listname ;}\listid1466894271}{\list\listtemplateid-551129232\listhybrid{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698713\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0
\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2880\jclisttab\tx2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li4320\jclisttab\tx4320 }{\listlevel\levelnfc2\levelnfcn2
\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li5040\jclisttab\tx5040 }{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel
\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li6480\jclisttab\tx6480 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li7200
\jclisttab\tx7200 }{\listname ;}\listid1671910564}{\list\listtemplateid-2071018504\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713
\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2160\jclisttab\tx2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li4320\jclisttab\tx4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2
\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6480\jclisttab\tx6480 }{\listname ;}\listid1927349189}}
{\*\listoverridetable{\listoverride\listid700473806\listoverridecount0\ls1}{\listoverride\listid1466894271\listoverridecount0\ls2}{\listoverride\listid1671910564\listoverridecount0\ls3}{\listoverride\listid1927349189\listoverridecount0\ls4}}{\info
{\title Entity Name Splitter Algorithm ( ENS )}{\author Wayne Lenius}{\operator Wayne Lenius}{\creatim\yr2008\mo4\dy21\hr12\min16}{\revtim\yr2008\mo5\dy30\hr8\min37}{\version9}{\edmins19720}{\nofpages4}{\nofwords1235}{\nofchars7043}
{\*\company Extract Systems, LLC}{\nofcharsws8649}{\vern8269}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs28 
Entity Name Splitter Algorithm ( ENS )
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Document Purpose
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {The purpose of this document is to describe the process used by the }{\b Split the name of a company or person}{
 Attribute Splitter to find entities.  This code is commonly used during finding of Grantors and Grantees.  The numbered steps from 1 to 9 as described below are documented within the source code.  The }{\b Keywords}{
 list referenced throughout this document is several collections of regular expressions used to locate and identify certain subtext.  The }{\b Keywords.dat.etf}{ file is located in the ComponentData\\AFUtility folder.
\par 
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Basic Steps
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 a.\tab}}\pard \ql \fi-360\li1440\ri0\widctlpar\jclisttab\tx1440\aspalpha\aspnum\faauto\ls1\ilvl1\adjustright\rin0\lin1440\itap0 {Set up objects and retrieve text to be split.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 b.\tab}Check text for Trust indicators.  Also check for Municipality indicators.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 c.\tab}Check text for Person Suffix.  Also check text for digit words indicating that the entity is a company.  If entity type remains undetermined, check text for Person Designators.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 d.\tab}Handle Trust and Trustee items.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 e.\tab}Check text for Company Suffix.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 f.\tab}Check text for Company Designators.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 g.\tab}If the input is neither a company nor a municipality, treat it as a collection of one or more persons.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 h.\tab}If input is not a collection of persons, treat it as a collection of company names separated by semicolons.
\par }\pard \ql \li1080\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {
\par Each entity in the above collections is passed through an alias-handling routine.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 a.\tab}}\pard \ql \fi-360\li1440\ri0\widctlpar\jclisttab\tx1440\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin1440\itap0 {Check for Person Alias keywords.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 b.\tab}Find Company Alias keywords.  Note that some company entities use alias strings defined in the PersonAlias collections.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 c.\tab}Check for Related Company keywords.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 d.\tab}Separate the working string into pre-alias and post-alias substrings after removing the alias text.
\par }\pard \ql \li1080\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {
\par Tokenizing of the input text into prospective entity sub-attributes uses the following sequence of delimiters.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 a.\tab}}\pard \ql \fi-360\li1440\ri0\widctlpar\jclisttab\tx1440\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1440\itap0 {Semicolon \'93;\'94.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 b.\tab}Forward slash \'93/\'94.  These delimiters are validated such that slashes that are used to divide single words (i.e. H/W or S/B/M) are not treated as delimiters.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 c.\tab}Ampersand \'93&\'94.  These delimiters are validated such that certain preceding and succeeding word combinations are not divided.  The word combinations are defined in the code instead of as keyw
ords and include: \'93Housing & Urban\'94, \'93Will & Testament\'94, \'93Bank & Trust\'94, and \'93One & The\'94.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 d.\tab}And \'93 and \'93.  The word \'93and\'94 is subject to the same validation as an ampersand character as described above.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 e.\tab}Et Ux.  The phrase \'93et ux\'94 is an abbreviation for the Latin \'93et uxor\'94 meaning \'93and wife.\'94
  These delimiters ( both et ux and etux ) are subject to the same validation as an ampersand character.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 f.\tab}Comma \'93,\'94.  These delimiters are validated such that a comma found as part of a Last, First pair is not used.  Also, a comma that is next to an alias phrase is not used.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 g.\tab}
Blank Line.  If no other delimiters have been found, blank lines are used as delimiters subject to validation.  Blank lines are invalid as delimiters if the previous or subsequent sub-string contains only one word.
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 1 : Set up objects
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
Objects used in later steps and created here include: the collection of sub-attributes, the regular expression parser and a parent attribute used in managing alias sub-attributes.  Additionally, any standalone zeroes either as \'93 0 \'93 or \'93 0. \'93
 are changed to upper-case O.
\par 
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 4.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 2A : Check text for Trust Indicators
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {The collection of TrustIndicators keywords is used to identify if the input looks like a trust entity.  An example is \'93Revocable Living Trust\'94.  Finding a trust i
ndicator sets a local flag inside the SplitAttribute() method.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 5.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 2B : Check text for Municipality Indicators
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {The collection of MunicipalityIndicators keywords is used to identify if the entity looks like a municipality.  Examples include \'93County of\'94 and \'93
Commonwealth of\'94.  Finding a municipality indicator sets a local flag inside the SplitAttribute() method.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 6.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 3A : Check text for Person Suffix
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {The collection of PersonSuffixes keywords is used to identify if the entity looks like a person.  Examples include \'93Jr\'94, \'93Sr.\'94, and \'93III\'94
.  The code also checks for a period preceding the suffix text.  If the suffix is preceded by a period and then a space, the period is changed to a comma since the period is most likely an OCR error.  Finding a person suffix s
ets a local flag inside the SplitAttribute() method.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 7.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 3B : Check text for digit words
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {The input text is checked for any digit characters.  Finding a digit indicates that the entity is a company and sets a local flag inside the SplitAttribute() method.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 8.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 3C : Check text for Person Designator
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
If the entity does not already look like a company, the collection of PersonDesignators keywords is used to identify if the entity looks like a person.  Examples include \'93a single person\'94, \'93married to\'94, and \'93husband and wife\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 9.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 4 : Split a Trust attribute
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
If the entity looks like a trust, the doTrustSplitting() local method is called.  The input text is tokenized to create prospective sub-attributes.  Each prospective entity goes through standard validation
.  Entities that remain are checked against the TrustIndicators collection.  Entities that look like trusts must also not contain entries from the NonTrust collection.  Entities that do not look like trusts are added as trustee sub-attributes under the tr
ust sub-attribute.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 10.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 5 : Check text for Company Suffix
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
If the entity does not already look like a person or a municipality, the collection of CompanySuffixes keywords is used to identify if the entity looks like a company.  Examples include \'93LLC\'94, \'93Ltd\'94, and \'93Federal Savings Bank\'94
.  The code also checks for a period preceding the suffix text.  If the suffix is preceded by a period and then a space, the period is changed to a comma since the period is most likely an OCR error.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 11.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 6 : Check text for Company Designator
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {
If the entity does not already look like a person or a company or a municipality, the collection of CompanyDesignators keywords is used to identify if the entity looks like a company.  Examples include \'93Corporation\'94, \'93Association\'94, and \'93Com
mercial\'94.    Finding a company designator indicates that the entity is a company and  sets a local flag inside the SplitAttribute() method.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 12.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 7 \endash  Part 1 : Split group of one or more persons
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {If the entity does not already look like a company or a munici
pality, the working string is considered to be a collection of one or more persons.  The collection of PersonTrimIdentifiers keywords is used for initial trimming.  Examples include \'93his wife\'94, \'93married\'94, and \'93joined by his/her spouse\'94
.  Any keyword phrases found here are replaced by a semicolon \endash  used later as a delimiter.
\par 
\par The working string is then divided (tokenized) into potential entity sub-attributes as described in the Basic Steps above.  Each validated person entity is provided to the }{\b Split the name of a person}{
 attribute splitter.  The splitter divides the entity into First, Last, Middle, Title and Suffix sub-attributes.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 13.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 7 \endash  Part 2 : Add missing last name
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {If the collection of persons includes one or more persons that do not have a last name sub
-attribute, copy the last name sub-attribute from another entity.  An example is \'93John and Mary Smith\'94.
\par 
\par {\listtext\pard\plain\b \hich\af0\dbch\af0\loch\f0 14.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\b Step 8 \endash  Part 1 : Split group of one or more companies
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {If the entity does look like a company or a municipality, the working string is considered to be
 a collection of one or more companies.  The collection of CompanyAssignors keywords is used for initial trimming.  Examples include \'93as assigned to\'94, and \'93its successor\'94.
\par 
\par The working string is then divided (tokenized) into potential entity sub-attributes as described in the Basic Steps above.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Entity Validation
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Each potential entity found in steps 7 and 8 is validated before being added to the collection of sub-attributes.  Validation consists of the following steps:
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin720\itap0 {Trimming unwanted information
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 a.\tab}}\pard \ql \fi-360\li1440\ri0\widctlpar\jclisttab\tx1440\aspalpha\aspnum\faauto\ls4\ilvl1\adjustright\rin0\lin1440\itap0 {Remove leading or trailing whitespace, semicolons, and asterisks.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 b.\tab}Remove an y trailing lower-case words
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 c.\tab}Remove trailing TRUSTEE or AGREEMENT words
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 d.\tab}Remove any of the following leading words / phrases: AND, PAID BY, CO-TRUSTEES, TRUSTEES.  Prospective person entities will also have leading TRUSTEE words removed.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 e.\tab}If the string is empty after trimming, the entity is invalid.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 f.\tab}If anything was trimmed in the above steps, go through the process again.  This allows complex phrases such as \'93AND TRUSTEES John Smith AGREEMENT\'94 to be trimmed.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin720\itap0 {
 Search for NumberWord or InvalidPerson keywords if the prospective entity is a person.  Examples include: One, Two, Of, The.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 3.\tab}If the string is shorter than 3 characters, the entity is invalid.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 4.\tab}If the string does not contain any upper-case characters, the entity is invalid.  One exception is a string containing \'93.com\'94.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 5.\tab}If the string contains only one word and the word contains one or more digits, the entity is invalid.
\par {\listtext\pard\plain\hich\af0\dbch\af0\loch\f0 6.\tab}Search for InvalidEntities keywords.  Examples include: GRANTOR, ASSIGNS, PARTY, PAGE, ADDENDUM.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 
\par }}