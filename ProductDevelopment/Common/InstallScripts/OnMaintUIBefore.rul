//---------------------------------------------------------------------------
// OnMaintUIBefore
//
// The OnMaintUIBefore event is called by the framework when the setup is
// running in maintenance mode. By default this event displays UI that
// allows the end user to add or remove features, repair currently
// installed features or uninstall the application.
//---------------------------------------------------------------------------
function OnMaintUIBefore()
	NUMBER nResult, nType;
	STRING szTitle, szMsg, svDir, svResult, szCaption;
begin
	// TO DO: if you want to enable background, window title, and caption bar title   								
	// SetTitle( @PRODUCT_NAME, 24, WHITE );					
	// SetTitle( @PRODUCT_NAME, 0, BACKGROUNDCAPTION );  			
	// SetColor(BACKGROUND,RGB (0, 128, 128));					
	// Enable( FULLWINDOWMODE );						
	// Enable( BACKGROUND );							
	
Dlg_Start:

    // Added in Version 9.5 - Support for REMOVEONLY option.
    if( !REMOVEONLY ) then
		// In standard mode show maintenance dialog
		Disable(BACKBUTTON);
		nType = SdWelcomeMaint(szTitle, szMsg, MODIFY);
		Enable(BACKBUTTON);
	else
        // Hide the initial progress dialog as otherwise the user can
        // click on it, and hide the MessageBox.
        Disable( DIALOGCACHE );

        // In RemoveOnly mode, set to remove.
        nType = REMOVEALL;
    endif;
	
	// Show Uninstall Confirmation Dialog
    if ( nType = REMOVEALL ) then
		nResult = MessageBox( SdLoadString( IFX_MAINTUI_MSG ), MB_YESNO );
		if (nResult != IDYES ) then
            
            if( REMOVEONLY ) then
                // In REMOVEONLY mode, abort the setup.
                abort;
            else
                // In non-REMOVEONLY mode, redisplay the previous dialog.
			    goto Dlg_Start;
            endif;

		endif;
	endif;

	nResult = NEXT;

Dlg_SdFeatureTree:
	if (nType = MODIFY) then
		szTitle = "";
		szMsg = "";
		nResult = SdFeatureTree(szTitle, szMsg, INSTALLDIR, "", 2);
		if (nResult = BACK) goto Dlg_Start;
	endif;
	
	// Close ExtractTRP2
	CloseApps();

	switch(nType)
		case REMOVEALL: 
			detectRDTInstall();
			
			// Check if other products are installed before uninstalling these items
			if (AreOtherExtractProductsInstalled() == FALSE) then
				// Uninstall ESFAMService
				UninstallDotNetService("\"" + PROGRAMFILES + EXTRACT_DIR ^ "ESFAMService.exe\"");
				
				// Uninstall the ESFDRSService.exe 
				UninstallDotNetService( "\"" + PROGRAMFILES + EXTRACT_DIR ^ "ESFDRSService.exe\"");
				
				// Uninstall Crystal Reports
				UninstallCrystalReports12();
				UninstallInstallSQLCE ();
			endif;
  			FeatureRemoveAll();
		case REPAIR:    
			FeatureReinstall();
	endswitch;
    
	// setup default status 
	SetStatusWindow(0, "");
	Enable(STATUSEX);
	StatusUpdate(ON, 100);
end;
