<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_laboratoryIdentifier.AutoUpdateQuery" xml:space="preserve">
    <value>&lt;Query Default='1'&gt;&lt;Attribute SpatialMode='Only' Required='0'&gt;../../../LabInfo/Name&lt;/Attribute&gt;&lt;Attribute SpatialMode='Only' Required='0'&gt;../../../LabInfo/Address/City&lt;/Attribute&gt;&lt;Attribute SpatialMode='Only' Required='0'&gt;../../../LabInfo/Address/State&lt;/Attribute&gt;&lt;Attribute SpatialMode='Only' Required='0'&gt;../../../LabInfo/Address/ZipCode&lt;/Attribute&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE LabCode IS NOT NULL AND LabCode = SUBSTRING(&lt;Attribute&gt;../LabCode&lt;/Attribute&gt;,1,25)&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE LabName LIKE '%' + REPLACE(REPLACE(REPLACE(REPLACE(&lt;Attribute&gt;../../../LabInfo/Name&lt;/Attribute&gt;, ' ', '%'), 'LABORATORY', '%'),'LABORATORIES', '%'), 'MEDICAL', '%') + '%'&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE LabName LIKE '%' + SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(&lt;Attribute&gt;../../../LabInfo/Name&lt;/Attribute&gt;), ' ', '%'), 'LABORATORY', '%'),'LABORATORIES', '%'), 'MEDICAL', '%'), 1, 10) + '%' and Zip LIKE SUBSTRING(&lt;Attribute&gt;../../../LabInfo/Address/ZipCode&lt;/Attribute&gt;,1,5) + '%'&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE LabName LIKE '%' + SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(&lt;Attribute&gt;../../../LabInfo/Name&lt;/Attribute&gt;), ' ', '%'), 'LABORATORY', '%'),'LABORATORIES', '%'), 'MEDICAL', '%'), 1, 10) + '%' and City LIKE &lt;Attribute&gt;../../../LabInfo/Address/City&lt;/Attribute&gt;&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE LabName LIKE SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(&lt;Attribute&gt;../../../LabInfo/Name&lt;/Attribute&gt;), ' ', '%'), 'LABORATORY', '%'),'LABORATORIES', '%'), 'MEDICAL', '%'), 1, 3) + '%' and Zip LIKE SUBSTRING(&lt;Attribute&gt;../../../LabInfo/Address/ZipCode&lt;/Attribute&gt;,1,5) + '%'&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabName FROM LabAddresses WHERE Zip LIKE SUBSTRING(&lt;Attribute&gt;../../../LabInfo/Address/ZipCode&lt;/Attribute&gt;,1,5) + '%'&lt;/SQL&gt;&lt;/Query&gt;
</value>
  </data>
  <metadata name="_testName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_testName.AutoUpdateQuery" xml:space="preserve">
    <value>&lt;Query&gt;&lt;SQL&gt;SELECT Name FROM LabOrder WHERE EpicCode = SUBSTRING(&lt;Attribute&gt;../EpicCode&lt;/Attribute&gt;,1,25)&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT Name FROM LabOrder WHERE Code = SUBSTRING(&lt;Attribute&gt;.&lt;/Attribute&gt;,1,25)&lt;/SQL&gt;&lt;/Query&gt;</value>
  </data>
  <data name="_testName.ValidationQuery" xml:space="preserve">
    <value>&lt;Query&gt;&lt;SQL&gt;SELECT Name FROM LabOrder WHERE EpicCode IS NOT NULL ORDER BY Name&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query ValidationListType='ValidationListOnly' ValidValue='' ValidationMessage='ValidationMessage' ValidationWarning='1'&gt;
	&lt;SQL Name='MandatoryTests' Exclude='1'&gt;SELECT TestCode FROM LabOrderTest INNER JOIN LabOrder ON LabOrderTest.OrderCode = LabOrder.Code WHERE   LabOrder.Code = &lt;Attribute&gt;../OrderCode&lt;/Attribute&gt; AND Mandatory = 1&lt;/SQL&gt;
	&lt;Attribute Name='ExistingTests' Exclude='1' SelectionMode='List'&gt;../Component/TestCode&lt;/Attribute&gt;
	&lt;Result Name='MissingTests' Arg1='MandatoryTests' Operation='SubtractList' Arg2='ExistingTests'/&gt;
	&lt;Complex Name='ValidationMessage' Exclude='1'&gt;Missing mandatory test(s): &lt;Result Arg1='MissingTests' StringList=', '/&gt;&lt;/Complex&gt;
&lt;/Query&gt;</value>
  </data>
  <metadata name="_orderCode.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_componentDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_componentName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_componentName.AutoUpdateQuery" xml:space="preserve">
    <value>&lt;Query&gt;&lt;SQL&gt;SELECT LabTest.OfficialName FROM LabTest INNER JOIN LabOrderTest On LabTest.TestCode = LabOrderTest.TestCode WHERE LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../OrderCode&lt;/Attribute&gt;,1,25) AND LabTest.TestCode = SUBSTRING(&lt;Attribute&gt;TestCode&lt;/Attribute&gt;,1,25)&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabTest.OfficialName FROM LabTest, AlternateTestName, LabOrderTest WHERE LabTest.TestCode = AlternateTestName.TestCode AND LabTest.TestCode = LabOrderTest.TestCode AND LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../OrderCode&lt;/Attribute&gt;,1,25) AND AlternateTestName.Name = SUBSTRING(&lt;Attribute&gt;.&lt;/Attribute&gt;,1,50)&lt;/SQL&gt;&lt;/Query&gt;
&lt;Query&gt;&lt;SQL&gt;SELECT LabTest.OfficialName FROM LabTest INNER JOIN LabOrderTest On LabTest.TestCode = LabOrderTest.TestCode WHERE LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../OrderCode&lt;/Attribute&gt;,1,25) AND LabTest.TestCode = SUBSTRING(&lt;Attribute&gt;.&lt;/Attribute&gt;,1,25)&lt;/SQL&gt;&lt;/Query&gt;</value>
  </data>
  <data name="_componentName.ValidationQuery" xml:space="preserve">
    <value>&lt;SQL&gt;SELECT LabTest.OfficialName FROM LabTest INNER JOIN LabOrderTest On LabTest.TestCode = LabOrderTest.TestCode WHERE LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../OrderCode&lt;/Attribute&gt;,1,25) ORDER BY LabTest.OfficialName&lt;/SQL&gt;</value>
  </data>
  <metadata name="_testCode.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_testCode.AutoUpdateQuery" xml:space="preserve">
    <value>&lt;SQL&gt;SELECT LabTest.TestCode FROM LabTest INNER JOIN LabOrderTest On LabTest.TestCode = LabOrderTest.TestCode WHERE LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../../OrderCode&lt;/Attribute&gt;,1,25) AND OfficialName = SUBSTRING(&lt;Attribute&gt;..&lt;/Attribute&gt;,1,255)&lt;/SQL&gt;</value>
  </data>
  <data name="_testCode.ValidationQuery" xml:space="preserve">
    <value>&lt;SQL&gt;SELECT LabTest.TestCode FROM LabTest INNER JOIN LabOrderTest On LabTest.TestCode = LabOrderTest.TestCode WHERE LabOrderTest.OrderCode = SUBSTRING(&lt;Attribute&gt;../../OrderCode&lt;/Attribute&gt;,1,25) AND (OfficialName = SUBSTRING(&lt;Attribute&gt;..&lt;/Attribute&gt;,1,255) OR SUBSTRING(&lt;Attribute&gt;..&lt;/Attribute&gt;,1,255) NOT IN (SELECT OfficialName FROM LabTest))&lt;/SQL&gt;</value>
  </data>
  <metadata name="_componentValue.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_componentValue.ValidationQuery" xml:space="preserve">
    <value>&lt;Query ValidationListType='AutoCompleteOnly'&gt;
	&lt;SQL&gt;SELECT FirstName + ' ' + LastName FROM Physician  
		WHERE '&lt;Attribute Parameterize='False'&gt;..&lt;/Attribute&gt;' = 'UNDER DIRECTION OF'
	&lt;/SQL&gt;
&lt;/Query&gt;</value>
  </data>
  <metadata name="_componentUnits.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_componentUnits.ValidationQuery" xml:space="preserve">
    <value>&lt;Declarations&gt;
	&lt;Expression Name='ValidationMessage'&gt;
		(string.IsNullOrWhiteSpace(&lt;Attribute&gt;.&lt;/Attribute&gt;))
			? 'A unit designation is required for this test'
			: 'Unrecognized unit designation'
	&lt;/Expression&gt;
&lt;/Declarations&gt;
&lt;Query ValidationMessage='ValidationMessage'&gt;
	&lt;SQL&gt;SELECT '[BLANK]' FROM LabOrderTest
		WHERE RequireUnits = 0
		AND OrderCode = &lt;Attribute&gt;../../OrderCode&lt;/Attribute&gt;
		AND TestCode = &lt;Attribute&gt;../TestCode&lt;/Attribute&gt;
	&lt;/SQL&gt;
	&lt;SQL&gt;SELECT Unit FROM Unit ORDER BY Unit&lt;/SQL&gt;
&lt;/Query&gt;</value>
  </data>
  <metadata name="_componentRefRange.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_componentCorrectFlag.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="_componentCorrectFlag.AutoUpdateQuery" xml:space="preserve">
    <value>&lt;Declarations&gt;
	&lt;RegEx Name='Value' Pattern='(?&amp;lt;=[\s&amp;gt;&amp;lt;=]{0,3})[\d\.]+'&gt;&lt;Attribute &gt;../Value&lt;/Attribute&gt;&lt;/RegEx&gt;
	&lt;Attribute Name='Range'&gt;../Range&lt;/Attribute&gt;
	&lt;RegEx Name='MinValue1' Pattern='([\d\.]+(?=\s?-\s?\d+))|((?&amp;lt;=&amp;gt;\s?=\s?)[\d\.]+)'&gt;&lt;Range/&gt;&lt;/RegEx&gt;
	&lt;Expression Name='MinValue2'&gt;
		string.IsNullOrWhiteSpace(&lt;MinValue1/&gt;)
			? &lt;RegEx Pattern='(?&amp;lt;=&amp;gt;\s?)[\d\.]+'&gt;&lt;Range/&gt;&lt;/RegEx&gt;
			: ''
	&lt;/Expression&gt;
	&lt;RegEx Name='MaxValue1' Pattern='((?&amp;lt;=\d+\s?-\s?)[\d\.]+)|((?&amp;lt;=&amp;lt;\s?=\s?)[\d\.]+)'&gt;&lt;Range/&gt;&lt;/RegEx&gt;
	&lt;Expression Name='MaxValue2'&gt;
		string.IsNullOrWhiteSpace(&lt;MaxValue1/&gt;)
			? &lt;RegEx Pattern='(?&amp;lt;=&amp;lt;\s?)[\d\.]+'&gt;&lt;Range/&gt;&lt;/RegEx&gt;
			: ''
	&lt;/Expression&gt;
&lt;/Declarations&gt;
&lt;Query&gt;
	&lt;Expression&gt;
		(!string.IsNullOrWhiteSpace(&lt;Value/&gt;))
		? 	(
				(!string.IsNullOrWhiteSpace(&lt;MinValue1/&gt;) and (&lt;Value Type='double'/&gt; &amp;lt; &lt;MinValue1 Type='double'/&gt;))
				? 'L'
				: (!string.IsNullOrWhiteSpace(&lt;MinValue2/&gt;) and (&lt;Value Type='double'/&gt; &amp;lt;= &lt;MinValue2 Type='double'/&gt;))
				? 'L'
				: (!string.IsNullOrWhiteSpace(&lt;MaxValue1/&gt;) and (&lt;Value Type='double'/&gt; &amp;gt; &lt;MaxValue1 Type='double'/&gt;))
				? 'H'
				: (!string.IsNullOrWhiteSpace(&lt;MaxValue2/&gt;) and (&lt;Value Type='double'/&gt; &amp;gt;= &lt;MaxValue2 Type='double'/&gt;))
				? 'H'
				: '[BLANK]'
			)
		:	'[BLANK]'
	&lt;/Expression&gt;
&lt;/Query&gt;</value>
  </data>
  <metadata name="_componentOriginalName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_patientFirstNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_patientMiddleNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_patientLastNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_patientSuffixColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_orderingPhysicianLastNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_orderingPhysicianFirstNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_orderingPhysicianMiddleName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="_orderingPhysicianCodeColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>